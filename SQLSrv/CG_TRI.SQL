CREATE FUNCTION $$COMPANIA$$.ChildrenLike (@Codigo VARCHAR(25))
RETURNS VARCHAR(25)
AS
BEGIN
	DECLARE @ChildrenLike VARCHAR(25)
	DECLARE @C char
	DECLARE @Pos int
	DECLARE @NivelCeros bit

	Set @ChildrenLike = @Codigo
	Set @Pos = LEN(@Codigo)
	Set @NivelCeros = 1

	WHILE @POS > 0
	BEGIN
	SET @C = SUBSTRING(@ChildrenLike,@POS,1)
	IF (@C != '-' AND @C != '.' )
	BEGIN
		IF (@C = '0' AND @NivelCeros = 1)
			SET @NivelCeros = 1 
		ELSE
			SET @NivelCeros = 0
	END
	ELSE IF (@NivelCeros = 1 )
		SET @ChildrenLike = Substring(@Codigo, 1, @POS) + '%'
	ELSE
		SET @Pos = 0

		SET @POS = @POS - 1
	END
	RETURN(@ChildrenLike)
END
;



REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCION GETDESCRIPCION
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETDESCRIPCION
  (@OPCION AS INT, @PARAM_CCN AS VARCHAR(25), @TIPO_CONTABILIDAD AS VARCHAR(1)) 
  RETURNS VARCHAR(254)
  BEGIN 
  DECLARE @DESCRIPCION AS VARCHAR(254)
   IF @OPCION = 1  
   BEGIN   
    SELECT @DESCRIPCION = DESCRIPCION    
     FROM $$COMPANIA$$.CENTRO_COSTO    
     WHERE CENTRO_COSTO = @PARAM_CCN  
   END 
   ELSE IF @OPCION = 2  
	BEGIN 
		IF @TIPO_CONTABILIDAD = 'C' 
			BEGIN 
				SELECT @DESCRIPCION = DESCRIPCION_IFRS
				FROM $$COMPANIA$$.CUENTA_CONTABLE    
				WHERE CUENTA_CONTABLE = @PARAM_CCN  
			END
		ELSE 
			BEGIN 
				SELECT @DESCRIPCION = DESCRIPCION
				FROM $$COMPANIA$$.CUENTA_CONTABLE    
				WHERE CUENTA_CONTABLE = @PARAM_CCN  
			END
	END 
   ELSE IF @OPCION = 3  
   BEGIN
    SELECT @DESCRIPCION = RAZON_SOCIAL    
    FROM $$COMPANIA$$.NIT    
    WHERE NIT  = @PARAM_CCN  
   END 
   ELSE   
   BEGIN   
    SET @DESCRIPCION = 'NO DISPONIBLE'  
   END     
  
  RETURN (ISNULL(@DESCRIPCION,''))
  END;
 
 
 
REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN GETDESCRIPCIONFASE
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETDESCRIPCIONFASE(@PROYECTO AS VARCHAR(25), @FASE AS VARCHAR(25)) 
RETURNS VARCHAR(254)
BEGIN 
	DECLARE @DESCRIPCION AS VARCHAR(254)

	SELECT @DESCRIPCION = NOMBRE    
	FROM $$COMPANIA$$.FASE_PY    
	WHERE FASE  = @FASE
	AND PROYECTO = @PROYECTO
RETURN (ISNULL(@DESCRIPCION,''))
END;



REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS SALDOS
------------------------------------------------------------------
/
CREATE FUNCTION $$COMPANIA$$.GETSALDO
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FECHA AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @SALDOINICIAL DECIMAL(28,8), @MONTOSALDO DECIMAL(28,8), 
	@FECHAINICIAL DATETIME, @CONTCENTRO INT, @CONTCUENTA INT,
	@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
	@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),	
	@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
	@LCENTROCOSTOSALDO VARCHAR(25), @LCUENTACONTABLESALDO VARCHAR(25),
	@FECHAMIN DATETIME

SET @MONTOSALDO = 0
SET @SALDOINICIAL = 0
SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0

SELECT @FECHAMIN = MIN(FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE

SELECT @FECHAINICIAL = ISNULL(MAX(FECHA_FINAL), @FECHAMIN)
FROM $$COMPANIA$$.PERIODO_CONTABLE 
WHERE FECHA_FINAL < @FECHA



WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
		
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		
		IF	@MONEDA = 'L'
		 BEGIN
			/*SE OBTIENE EL SALDO*/
			IF @TIPOCONTABILIDAD = 'F'
			 BEGIN
				SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_LOCAL,0))
				FROM $$COMPANIA$$.SALDO S, 
					(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
					WHERE FECHA <= @FECHAINICIAL
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
					GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
				WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
				AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
				AND S.FECHA = S2.FECHA
			 END
			ELSE IF @TIPOCONTABILIDAD = 'C'
			 BEGIN
				SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_LOCAL,0))
				FROM $$COMPANIA$$.SALDO S, 
					(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
					WHERE FECHA <= @FECHAINICIAL
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
					GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
				WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
				AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
				AND S.FECHA = S2.FECHA
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK
			 END
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
							FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
							WHERE FECHA_CIERRE = @FECHA )
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK					
			 END
							
		 END
		ELSE IF @MONEDA = 'D'
		 BEGIN
			/*SE OBTIENE EL SALDO*/
			IF @TIPOCONTABILIDAD = 'F'
			 BEGIN
			 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_DOLAR,0))
				FROM $$COMPANIA$$.SALDO S, 
					(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
					WHERE FECHA <= @FECHAINICIAL
					AND CENTRO_COSTO LIKE @LCENTROCOSTO					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
					GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
				WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
				AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
				AND S.FECHA = S2.FECHA				
			 END
			ELSE IF @TIPOCONTABILIDAD = 'C'
			 BEGIN
				SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_DOLAR,0))
				FROM $$COMPANIA$$.SALDO S, 
					(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
					WHERE FECHA <= @FECHAINICIAL
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
					GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
				WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
				AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
				AND S.FECHA = S2.FECHA
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK	
			 END
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
							FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
							WHERE FECHA_CIERRE = @FECHA )
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK					
			 END
		 END
		ELSE
		 BEGIN
			
			
			SET @MONTOSALDO = 0
			SET @MONTO = 0
			BREAK
		 END
		SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
		SET @MONTOSALDO = @MONTOSALDO + ISNULL(@SALDOINICIAL, 0)
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTOSALDO,0) + ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS SALDOS NIT
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETSALDONIT
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@NIT1 AS VARCHAR(25), @NIT2 AS VARCHAR(25),
@NIT3 AS VARCHAR(25), @NIT4 AS VARCHAR(25), 
@NIT5 AS VARCHAR(25), @NIT6 AS VARCHAR(25),
@NIT7 AS VARCHAR(25), @NIT8 AS VARCHAR(25),
@NIT9 AS VARCHAR(25), @NIT10 AS VARCHAR(25),
@NIT11 AS VARCHAR(25), @NIT12 AS VARCHAR(25),
@FECHA AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @SALDOINICIAL DECIMAL(28,8), @MONTOSALDO DECIMAL(28,8), 
	@FECHAINICIAL DATETIME, @CONTCENTRO INT, @CONTCUENTA INT, @CONTNIT INT,
	@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LNIT VARCHAR(25),	
	@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
	@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
	@LNITMIN VARCHAR(25), @LNITMAX VARCHAR(25),
	@LCENTROCOSTOSALDO VARCHAR(25), @LCUENTACONTABLESALDO VARCHAR(25), @LNITSALDO VARCHAR(25),
	@FECHAMIN DATETIME

SET @MONTOSALDO = 0
SET @SALDOINICIAL = 0
SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTNIT = 0

SELECT @FECHAMIN = MIN(FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE

SELECT @FECHAINICIAL = ISNULL(MAX(FECHA_FINAL), @FECHAMIN)
FROM $$COMPANIA$$.PERIODO_CONTABLE 
WHERE FECHA_FINAL < @FECHA



WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK	
		
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK

		SELECT @LCUENTACONTABLEMIN = MIN(CUENTA_CONTABLE )
		FROM $$COMPANIA$$.CUENTA_CONTABLE
		WHERE CUENTA_CONTABLE LIKE @LCUENTACONTABLE
		AND ACEPTA_DATOS = 'S'

		SELECT @LCUENTACONTABLEMAX = MAX(CUENTA_CONTABLE )
		FROM $$COMPANIA$$.CUENTA_CONTABLE
		WHERE CUENTA_CONTABLE LIKE @LCUENTACONTABLE
		AND ACEPTA_DATOS = 'S'
		
		SET @CONTNIT = 0
		
		WHILE ( @CONTNIT < 12 )
		BEGIN

			IF @CONTNIT = 0 AND (@NIT1 != '' AND @NIT1 != ' ')
				SET @LNIT = @NIT1
			ELSE IF @CONTNIT = 1 AND (@NIT2 != '' AND @NIT2 != ' ')
				SET @LNIT = @NIT2
			ELSE IF @CONTNIT = 2 AND (@NIT3 != '' AND @NIT3 != ' ')
				SET @LNIT = @NIT3
			ELSE IF @CONTNIT = 3 AND (@NIT4 != '' AND @NIT4 != ' ')
				SET @LNIT = @NIT4
			ELSE IF @CONTNIT = 4 AND (@NIT5 != '' AND @NIT5 != ' ')
				SET @LNIT = @NIT5
			ELSE IF @CONTNIT = 5 AND (@NIT6 != '' AND @NIT6 != ' ')
				SET @LNIT = @NIT6
			ELSE IF @CONTNIT = 6 AND (@NIT7 != '' AND @NIT7 != ' ')
				SET @LNIT = @NIT7
			ELSE IF @CONTNIT = 7 AND (@NIT8 != '' AND @NIT8 != ' ')
				SET @LNIT = @NIT8
			ELSE IF @CONTNIT = 8 AND (@NIT9 != '' AND @NIT9 != ' ')
				SET @LNIT = @NIT9
			ELSE IF @CONTNIT = 9 AND (@NIT10 != '' AND @NIT10 != ' ')
				SET @LNIT = @NIT10
			ELSE IF @CONTNIT = 10 AND (@NIT11 != '' AND @NIT11 != ' ')
				SET @LNIT = @NIT11
			ELSE IF @CONTNIT = 11 AND (@NIT12 != '' AND @NIT12 != ' ')
				SET @LNIT = @NIT12
			ELSE IF @CONTNIT = 0
				SET @LNIT = '%'
			ELSE BREAK
			
			IF	@MONEDA = 'L'
			 BEGIN
				/*SE OBTIENE EL SALDO*/
				IF @TIPOCONTABILIDAD = 'F'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_LOCAL,0))
					FROM $$COMPANIA$$.SALDO_NIT S, 
						(SELECT NIT, CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO_NIT
						WHERE FECHA <= @FECHAINICIAL						
						AND NIT LIKE @LNIT
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY NIT, CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
					AND S.NIT = S2.NIT
				 END
				ELSE IF @TIPOCONTABILIDAD = 'C'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_LOCAL,0))
					FROM $$COMPANIA$$.SALDO_NIT S, 
						(SELECT NIT, CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO_NIT
						WHERE FECHA <= @FECHAINICIAL						
						AND NIT LIKE @LNIT
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY NIT, CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
					AND S.NIT = S2.NIT
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK
				 END
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHA )
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK					
				 END
								
			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN
				/*SE OBTIENE EL SALDO*/
				IF @TIPOCONTABILIDAD = 'F'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_DOLAR,0))
					FROM $$COMPANIA$$.SALDO_NIT S, 
						(SELECT NIT, CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO_NIT
						WHERE FECHA <= @FECHAINICIAL						
						AND NIT LIKE @LNIT
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY NIT, CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
					AND S.NIT = S2.NIT
				 END
				ELSE IF @TIPOCONTABILIDAD = 'C'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_DOLAR,0))
					FROM $$COMPANIA$$.SALDO_NIT S, 
						(SELECT NIT, CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO_NIT
						WHERE FECHA <= @FECHAINICIAL						
						AND NIT LIKE @LNIT
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY NIT, CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
					AND S.NIT = S2.NIT
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK	
				 END
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHA )
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @MONTOSALDO = @MONTOSALDO + ISNULL(@SALDOINICIAL, 0)
			SET @CONTNIT = @CONTNIT + 1
		END		
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END
RETURN ISNULL(@MONTOSALDO,0) + ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS SALDOS FASE
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETSALDOFASE( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FASE1 AS VARCHAR(25), @FASE2 AS VARCHAR(25), 
@FASE3 AS VARCHAR(25), @FASE4 AS VARCHAR(25), 
@FASE5 AS VARCHAR(25), @FASE6 AS VARCHAR(25), 
@FASE7 AS VARCHAR(25), @FASE8 AS VARCHAR(25), 
@FASE9 AS VARCHAR(25), @FASE10 AS VARCHAR(25), 
@FASE11 AS VARCHAR(25), @FASE12 AS VARCHAR(25),
@FECHA AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @SALDOINICIAL DECIMAL(28,8), @MONTOSALDO DECIMAL(28,8), 
	@FECHAINICIAL DATETIME, @CONTCENTRO INT, @CONTCUENTA INT, @CONTFASE INT,
	@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LFASE VARCHAR(25),
	@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
	@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
	@LFASEMIN VARCHAR(25), @LFASEMAX VARCHAR(25),
	@LCENTROCOSTOSALDO VARCHAR(25), @LCUENTACONTABLESALDO VARCHAR(25),
	@FECHAMIN DATETIME

SET @MONTOSALDO = 0
SET @SALDOINICIAL = 0
SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTFASE = 0

SELECT @FECHAMIN = MIN(FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE

SELECT @FECHAINICIAL = ISNULL(MAX(FECHA_FINAL), @FECHAMIN)
FROM $$COMPANIA$$.PERIODO_CONTABLE 
WHERE FECHA_FINAL < @FECHA


WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
		
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTFASE = 0
		
		WHILE ( @CONTFASE < 12 )
		BEGIN
			IF @CONTFASE = 0 AND (@FASE1 != '' AND @FASE1 != ' ')
				SET @LFASE = @FASE1
			ELSE IF @CONTFASE = 1 AND (@FASE2 != '' AND @FASE2 != ' ')
				SET @LFASE = @FASE2
			ELSE IF @CONTCUENTA = 2 AND (@FASE3 != '' AND @FASE3 != ' ')
				SET @LFASE = @FASE3
			ELSE IF @CONTFASE = 3 AND (@FASE4 != '' AND @FASE4 != ' ')
				SET @LFASE = @FASE4
			ELSE IF @CONTFASE = 4 AND (@FASE5 != '' AND @FASE5 != ' ')
				SET @LFASE = @FASE5
			ELSE IF @CONTFASE = 5 AND (@FASE6 != '' AND @FASE6 != ' ')
				SET @LFASE = @FASE6
			ELSE IF @CONTFASE = 6 AND (@FASE7 != '' AND @FASE7 != ' ')
				SET @LFASE = @FASE7
			ELSE IF @CONTFASE = 7 AND (@FASE8 != '' AND @FASE8 != ' ')
				SET @LFASE = @FASE8
			ELSE IF @CONTFASE = 8 AND (@FASE9 != '' AND @FASE9 != ' ')
				SET @LFASE = @FASE9
			ELSE IF @CONTFASE = 9 AND (@FASE10 != '' AND @FASE10 != ' ')
				SET @LFASE = @FASE10
			ELSE IF @CONTFASE = 10 AND (@FASE11 != '' AND @FASE11 != ' ')
				SET @LFASE = @FASE11
			ELSE IF @CONTFASE = 11 AND (@FASE12 != '' AND @FASE12 != ' ')
				SET @LFASE = @FASE12
			ELSE IF @CONTFASE = 0
				SET @LFASE = '%'
			ELSE BREAK
				
				
			IF	@MONEDA = 'L'
			 BEGIN
				/*SE OBTIENE EL SALDO*/
				IF @TIPOCONTABILIDAD = 'F'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_LOCAL,0))
					FROM $$COMPANIA$$.SALDO S, 
						(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
						WHERE FECHA <= @FECHAINICIAL
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
				 END
				ELSE IF @TIPOCONTABILIDAD = 'C'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_LOCAL,0))
					FROM $$COMPANIA$$.SALDO S, 
						(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
						WHERE FECHA <= @FECHAINICIAL
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0							
					SET @MONTO = 0
					BREAK
				 END
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHA )
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK					
				 END

			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN
				/*SE OBTIENE EL SALDO*/
				IF @TIPOCONTABILIDAD = 'F'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_FISC_DOLAR,0))
					FROM $$COMPANIA$$.SALDO S, 
						(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
						WHERE FECHA <= @FECHAINICIAL
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
				 END
				ELSE IF @TIPOCONTABILIDAD = 'C'
				 BEGIN
				 	SELECT @SALDOINICIAL = SUM(ISNULL(SALDO_CORP_DOLAR,0))
					FROM $$COMPANIA$$.SALDO S, 
						(SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) AS FECHA FROM $$COMPANIA$$.SALDO
						WHERE FECHA <= @FECHAINICIAL
						AND CENTRO_COSTO LIKE @LCENTROCOSTO 						
						AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
						GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2
					WHERE S.CENTRO_COSTO = S2.CENTRO_COSTO
					AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
					AND S.FECHA = S2.FECHA
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK	
				 END
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA > @FECHAINICIAL AND FECHA <= @FECHA
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHA )
				 END
				ELSE
				 BEGIN
					SET @MONTOSALDO = 0
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTOSALDO = 0
				SET @MONTO = 0
				BREAK
			 END
		 SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
		 SET @MONTOSALDO = @MONTOSALDO + ISNULL(@SALDOINICIAL, 0)
		 SET @CONTFASE = @CONTFASE + 1
			
		END		
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTOSALDO,0) + ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS DEBITOS
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETDEBITO
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
	
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		
		IF	@MONEDA = 'L'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
							
		 END
		ELSE IF @MONEDA = 'D'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
		 END
		ELSE
		 BEGIN
			SET @MONTO = 0
			BREAK
		 END
		SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS CREDITOS
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETCREDITO
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
	
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		
		IF	@MONEDA = 'L'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
							
		 END
		ELSE IF @MONEDA = 'D'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
		 END
		ELSE
		 BEGIN
			SET @MONTO = 0
			BREAK
		 END
		SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS MOVIMIENTOS
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETMOVIMIENTO
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
	
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		
		IF	@MONEDA = 'L'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))	
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
							
		 END
		ELSE IF @MONEDA = 'D'
		 BEGIN			
			/*SE OBTIENE EL MOVIMIENTO*/
			IF @ANTESCIERRE = 'N'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
			 END
			ELSE IF @ANTESCIERRE = 'S'
			 BEGIN
				SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))
				FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
				WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
				AND CENTRO_COSTO LIKE @LCENTROCOSTO 				
				AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
				AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				AND	ASIENTO NOT IN(	SELECT ASIENTO 
									FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
									WHERE FECHA_CIERRE = @FECHAFIN )
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK					
			 END
		 END
		ELSE
		 BEGIN
			SET @MONTO = 0
			BREAK
		 END
		SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS DEBITOS NIT
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETDEBITONIT
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@NIT1 AS VARCHAR(25), @NIT2 AS VARCHAR(25),
@NIT3 AS VARCHAR(25), @NIT4 AS VARCHAR(25), 
@NIT5 AS VARCHAR(25), @NIT6 AS VARCHAR(25),
@NIT7 AS VARCHAR(25), @NIT8 AS VARCHAR(25),
@NIT9 AS VARCHAR(25), @NIT10 AS VARCHAR(25),
@NIT11 AS VARCHAR(25), @NIT12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8),
		@CONTCENTRO INT, @CONTCUENTA INT, @CONTNIT INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LNIT VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
		@LNITMIN VARCHAR(25), @LNITMAX VARCHAR(25) 

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTNIT = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
	
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTNIT = 0
		
		WHILE ( @CONTNIT < 12 )
		BEGIN

			IF @CONTNIT = 0 AND (@NIT1 != '' AND @NIT1 != ' ')
				SET @LNIT = @NIT1
			ELSE IF @CONTNIT = 1 AND (@NIT2 != '' AND @NIT2 != ' ')
				SET @LNIT = @NIT2
			ELSE IF @CONTNIT = 2 AND (@NIT3 != '' AND @NIT3 != ' ')
				SET @LNIT = @NIT3
			ELSE IF @CONTNIT = 3 AND (@NIT4 != '' AND @NIT4 != ' ')
				SET @LNIT = @NIT4
			ELSE IF @CONTNIT = 4 AND (@NIT5 != '' AND @NIT5 != ' ')
				SET @LNIT = @NIT5
			ELSE IF @CONTNIT = 5 AND (@NIT6 != '' AND @NIT6 != ' ')
				SET @LNIT = @NIT6
			ELSE IF @CONTNIT = 6 AND (@NIT7 != '' AND @NIT7 != ' ')
				SET @LNIT = @NIT7
			ELSE IF @CONTNIT = 7 AND (@NIT8 != '' AND @NIT8 != ' ')
				SET @LNIT = @NIT8
			ELSE IF @CONTNIT = 8 AND (@NIT9 != '' AND @NIT9 != ' ')
				SET @LNIT = @NIT9
			ELSE IF @CONTNIT = 9 AND (@NIT10 != '' AND @NIT10 != ' ')
				SET @LNIT = @NIT10
			ELSE IF @CONTNIT = 10 AND (@NIT11 != '' AND @NIT11 != ' ')
				SET @LNIT = @NIT11
			ELSE IF @CONTNIT = 11 AND (@NIT12 != '' AND @NIT12 != ' ')
				SET @LNIT = @NIT12
			ELSE IF @CONTNIT = 0
				SET @LNIT = '%'
			ELSE BREAK
			
			IF	@MONEDA = 'L'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
								
			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTNIT = @CONTNIT + 1
		END		
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END
RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS CREDITOS NIT
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETCREDITONIT
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@NIT1 AS VARCHAR(25), @NIT2 AS VARCHAR(25),
@NIT3 AS VARCHAR(25), @NIT4 AS VARCHAR(25), 
@NIT5 AS VARCHAR(25), @NIT6 AS VARCHAR(25),
@NIT7 AS VARCHAR(25), @NIT8 AS VARCHAR(25),
@NIT9 AS VARCHAR(25), @NIT10 AS VARCHAR(25),
@NIT11 AS VARCHAR(25), @NIT12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8),
		@CONTCENTRO INT, @CONTCUENTA INT, @CONTNIT INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LNIT VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
		@LNITMIN VARCHAR(25), @LNITMAX VARCHAR(25) 

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTNIT = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
		
	SET @CONTCUENTA = 0 
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTNIT = 0
		
		WHILE ( @CONTNIT < 12 )
		BEGIN

			IF @CONTNIT = 0 AND (@NIT1 != '' AND @NIT1 != ' ')
				SET @LNIT = @NIT1
			ELSE IF @CONTNIT = 1 AND (@NIT2 != '' AND @NIT2 != ' ')
				SET @LNIT = @NIT2
			ELSE IF @CONTNIT = 2 AND (@NIT3 != '' AND @NIT3 != ' ')
				SET @LNIT = @NIT3
			ELSE IF @CONTNIT = 3 AND (@NIT4 != '' AND @NIT4 != ' ')
				SET @LNIT = @NIT4
			ELSE IF @CONTNIT = 4 AND (@NIT5 != '' AND @NIT5 != ' ')
				SET @LNIT = @NIT5
			ELSE IF @CONTNIT = 5 AND (@NIT6 != '' AND @NIT6 != ' ')
				SET @LNIT = @NIT6
			ELSE IF @CONTNIT = 6 AND (@NIT7 != '' AND @NIT7 != ' ')
				SET @LNIT = @NIT7
			ELSE IF @CONTNIT = 7 AND (@NIT8 != '' AND @NIT8 != ' ')
				SET @LNIT = @NIT8
			ELSE IF @CONTNIT = 8 AND (@NIT9 != '' AND @NIT9 != ' ')
				SET @LNIT = @NIT9
			ELSE IF @CONTNIT = 9 AND (@NIT10 != '' AND @NIT10 != ' ')
				SET @LNIT = @NIT10
			ELSE IF @CONTNIT = 10 AND (@NIT11 != '' AND @NIT11 != ' ')
				SET @LNIT = @NIT11
			ELSE IF @CONTNIT = 11 AND (@NIT12 != '' AND @NIT12 != ' ')
				SET @LNIT = @NIT12
			ELSE IF @CONTNIT = 0
				SET @LNIT = '%'
			ELSE BREAK
			
			IF	@MONEDA = 'L'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE
					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
								
			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTNIT = @CONTNIT + 1
		END		
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END
RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN PARA OBTENER LOS MOVIMIENTOS NIT
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETMOVIMIENTONIT
( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@NIT1 AS VARCHAR(25), @NIT2 AS VARCHAR(25),
@NIT3 AS VARCHAR(25), @NIT4 AS VARCHAR(25), 
@NIT5 AS VARCHAR(25), @NIT6 AS VARCHAR(25),
@NIT7 AS VARCHAR(25), @NIT8 AS VARCHAR(25),
@NIT9 AS VARCHAR(25), @NIT10 AS VARCHAR(25),
@NIT11 AS VARCHAR(25), @NIT12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8),
		@CONTCENTRO INT, @CONTCUENTA INT, @CONTNIT INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LNIT VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
		@LNITMIN VARCHAR(25), @LNITMAX VARCHAR(25) 

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTNIT = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
			
	SET @CONTCUENTA = 0

	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTNIT = 0

		WHILE ( @CONTNIT < 12 )
		BEGIN

			IF @CONTNIT = 0 AND (@NIT1 != '' AND @NIT1 != ' ')
				SET @LNIT = @NIT1
			ELSE IF @CONTNIT = 1 AND (@NIT2 != '' AND @NIT2 != ' ')
				SET @LNIT = @NIT2
			ELSE IF @CONTNIT = 2 AND (@NIT3 != '' AND @NIT3 != ' ')
				SET @LNIT = @NIT3
			ELSE IF @CONTNIT = 3 AND (@NIT4 != '' AND @NIT4 != ' ')
				SET @LNIT = @NIT4
			ELSE IF @CONTNIT = 4 AND (@NIT5 != '' AND @NIT5 != ' ')
				SET @LNIT = @NIT5
			ELSE IF @CONTNIT = 5 AND (@NIT6 != '' AND @NIT6 != ' ')
				SET @LNIT = @NIT6
			ELSE IF @CONTNIT = 6 AND (@NIT7 != '' AND @NIT7 != ' ')
				SET @LNIT = @NIT7
			ELSE IF @CONTNIT = 7 AND (@NIT8 != '' AND @NIT8 != ' ')
				SET @LNIT = @NIT8
			ELSE IF @CONTNIT = 8 AND (@NIT9 != '' AND @NIT9 != ' ')
				SET @LNIT = @NIT9
			ELSE IF @CONTNIT = 9 AND (@NIT10 != '' AND @NIT10 != ' ')
				SET @LNIT = @NIT10
			ELSE IF @CONTNIT = 10 AND (@NIT11 != '' AND @NIT11 != ' ')
				SET @LNIT = @NIT11
			ELSE IF @CONTNIT = 11 AND (@NIT12 != '' AND @NIT12 != ' ')
				SET @LNIT = @NIT12
			ELSE IF @CONTNIT = 0
				SET @LNIT = '%'
			ELSE BREAK
			
			IF	@MONEDA = 'L'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
								
			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN				
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND NIT LIKE @LNIT
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
										FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
										WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTNIT = @CONTNIT + 1
		END		
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END
RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN GETDEBITOFASE
------------------------------------------------------------------
/


CREATE FUNCTION $$COMPANIA$$.GETDEBITOFASE( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FASE1 AS VARCHAR(25), @FASE2 AS VARCHAR(25), 
@FASE3 AS VARCHAR(25), @FASE4 AS VARCHAR(25), 
@FASE5 AS VARCHAR(25), @FASE6 AS VARCHAR(25), 
@FASE7 AS VARCHAR(25), @FASE8 AS VARCHAR(25), 
@FASE9 AS VARCHAR(25), @FASE10 AS VARCHAR(25), 
@FASE11 AS VARCHAR(25), @FASE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT, @CONTFASE INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LFASE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),		
		@LFASEMIN VARCHAR(25), @LFASEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTFASE= 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
		
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTFASE= 0
		
		WHILE ( @CONTFASE < 12 )
		BEGIN
			IF @CONTFASE = 0 AND (@FASE1 != '' AND @FASE1 != ' ')
				SET @LFASE = @FASE1
			ELSE IF @CONTFASE = 1 AND (@FASE2 != '' AND @FASE2 != ' ')
				SET @LFASE = @FASE2
			ELSE IF @CONTFASE = 2 AND (@FASE3 != '' AND @FASE3 != ' ')
				SET @LFASE = @FASE3
			ELSE IF @CONTFASE = 3 AND (@FASE4 != '' AND @FASE4 != ' ')
				SET @LFASE = @FASE4
			ELSE IF @CONTFASE = 4 AND (@FASE5 != '' AND @FASE5 != ' ')
				SET @LFASE = @FASE5
			ELSE IF @CONTFASE = 5 AND (@FASE6 != '' AND @FASE6 != ' ')
				SET @LFASE = @FASE6
			ELSE IF @CONTFASE = 6 AND (@FASE7 != '' AND @FASE7 != ' ')
				SET @LFASE = @FASE7
			ELSE IF @CONTFASE = 7 AND (@FASE8 != '' AND @FASE8 != ' ')
				SET @LFASE = @FASE8
			ELSE IF @CONTFASE = 8 AND (@FASE9 != '' AND @FASE9 != ' ')
				SET @LFASE = @FASE9
			ELSE IF @CONTFASE = 9 AND (@FASE10 != '' AND @FASE10 != ' ')
				SET @LFASE = @FASE10
			ELSE IF @CONTFASE = 10 AND (@FASE11 != '' AND @FASE11 != ' ')
				SET @LFASE = @FASE11
			ELSE IF @CONTFASE = 11 AND (@FASE12 != '' AND @FASE12 != ' ')
				SET @LFASE = @FASE12
			ELSE IF @CONTFASE = 0
				SET @LFASE = '%'
			ELSE BREAK
		
			IF	@MONEDA = 'L'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END

			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTFASE = @CONTFASE + 1
		END
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;


REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN GETCREDITOFASE
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETCREDITOFASE( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FASE1 AS VARCHAR(25), @FASE2 AS VARCHAR(25), 
@FASE3 AS VARCHAR(25), @FASE4 AS VARCHAR(25), 
@FASE5 AS VARCHAR(25), @FASE6 AS VARCHAR(25), 
@FASE7 AS VARCHAR(25), @FASE8 AS VARCHAR(25), 
@FASE9 AS VARCHAR(25), @FASE10 AS VARCHAR(25), 
@FASE11 AS VARCHAR(25), @FASE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT, @CONTFASE INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LFASE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
		@LFASEMIN VARCHAR(25), @LFASEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTFASE = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
			
	SET @CONTCUENTA = 0
	
	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTFASE= 0
		
		WHILE ( @CONTFASE < 12 )
		BEGIN
			IF @CONTFASE = 0 AND (@FASE1 != '' AND @FASE1 != ' ')
				SET @LFASE = @FASE1
			ELSE IF @CONTFASE = 1 AND (@FASE2 != '' AND @FASE2 != ' ')
				SET @LFASE = @FASE2
			ELSE IF @CONTFASE = 2 AND (@FASE3 != '' AND @FASE3 != ' ')
				SET @LFASE = @FASE3
			ELSE IF @CONTFASE = 3 AND (@FASE4 != '' AND @FASE4 != ' ')
				SET @LFASE = @FASE4
			ELSE IF @CONTFASE = 4 AND (@FASE5 != '' AND @FASE5 != ' ')
				SET @LFASE = @FASE5
			ELSE IF @CONTFASE = 5 AND (@FASE6 != '' AND @FASE6 != ' ')
				SET @LFASE = @FASE6
			ELSE IF @CONTFASE = 6 AND (@FASE7 != '' AND @FASE7 != ' ')
				SET @LFASE = @FASE7
			ELSE IF @CONTFASE = 7 AND (@FASE8 != '' AND @FASE8 != ' ')
				SET @LFASE = @FASE8
			ELSE IF @CONTFASE = 8 AND (@FASE9 != '' AND @FASE9 != ' ')
				SET @LFASE = @FASE9
			ELSE IF @CONTFASE = 9 AND (@FASE10 != '' AND @FASE10 != ' ')
				SET @LFASE = @FASE10
			ELSE IF @CONTFASE = 10 AND (@FASE11 != '' AND @FASE11 != ' ')
				SET @LFASE = @FASE11
			ELSE IF @CONTFASE = 11 AND (@FASE12 != '' AND @FASE12 != ' ')
				SET @LFASE = @FASE12
			ELSE IF @CONTFASE = 0
				SET @LFASE = '%'
			ELSE BREAK


			IF	@MONEDA = 'L'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_LOCAL,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END

			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTFASE = @CONTFASE + 1
		END
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN GETMOVIMIENTOFASE
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETMOVIMIENTOFASE( @ESLIKE AS INT,
@CENTROCOSTO1 AS VARCHAR(25), @CENTROCOSTO2 AS VARCHAR(25),
@CENTROCOSTO3 AS VARCHAR(25), @CENTROCOSTO4 AS VARCHAR(25),
@CENTROCOSTO5 AS VARCHAR(25), @CENTROCOSTO6 AS VARCHAR(25),
@CENTROCOSTO7 AS VARCHAR(25), @CENTROCOSTO8 AS VARCHAR(25),
@CENTROCOSTO9 AS VARCHAR(25), @CENTROCOSTO10 AS VARCHAR(25),
@CENTROCOSTO11 AS VARCHAR(25), @CENTROCOSTO12 AS VARCHAR(25),
@CUENTACONTABLE1 AS VARCHAR(25), @CUENTACONTABLE2 AS VARCHAR(25),
@CUENTACONTABLE3 AS VARCHAR(25), @CUENTACONTABLE4 AS VARCHAR(25),
@CUENTACONTABLE5 AS VARCHAR(25), @CUENTACONTABLE6 AS VARCHAR(25),
@CUENTACONTABLE7 AS VARCHAR(25), @CUENTACONTABLE8 AS VARCHAR(25),
@CUENTACONTABLE9 AS VARCHAR(25), @CUENTACONTABLE10 AS VARCHAR(25),
@CUENTACONTABLE11 AS VARCHAR(25), @CUENTACONTABLE12 AS VARCHAR(25),
@FASE1 AS VARCHAR(25), @FASE2 AS VARCHAR(25), 
@FASE3 AS VARCHAR(25), @FASE4 AS VARCHAR(25), 
@FASE5 AS VARCHAR(25), @FASE6 AS VARCHAR(25), 
@FASE7 AS VARCHAR(25), @FASE8 AS VARCHAR(25), 
@FASE9 AS VARCHAR(25), @FASE10 AS VARCHAR(25), 
@FASE11 AS VARCHAR(25), @FASE12 AS VARCHAR(25),
@FECHAINI AS DATETIME, @FECHAFIN AS DATETIME, @TIPOCONTABILIDAD AS VARCHAR(1), 
@MONEDA AS VARCHAR(1), @ANTESCIERRE AS VARCHAR(1))
RETURNS DECIMAL(28,8)
BEGIN
DECLARE @MONTO DECIMAL(28,8), @MONTOINICIAL DECIMAL(28,8), @CONTCENTRO INT, @CONTCUENTA INT, @CONTFASE INT,
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25), @LFASE VARCHAR(25),
		@LCENTROCOSTOMIN VARCHAR(25), @LCENTROCOSTOMAX VARCHAR(25),
		@LCUENTACONTABLEMIN VARCHAR(25), @LCUENTACONTABLEMAX VARCHAR(25),
		@LFASEMIN VARCHAR(25), @LFASEMAX VARCHAR(25)

SET @MONTO = 0
SET @MONTOINICIAL = 0

SET @CONTCENTRO = 0
SET @CONTCUENTA = 0
SET @CONTFASE = 0

WHILE ( @CONTCENTRO < 12 )
 BEGIN

	IF @CONTCENTRO = 0 AND (@CENTROCOSTO1 != '' AND @CENTROCOSTO1 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO1
	ELSE IF @CONTCENTRO = 1 AND (@CENTROCOSTO2 != '' AND @CENTROCOSTO2 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO2
	ELSE IF @CONTCENTRO = 2 AND (@CENTROCOSTO3 != '' AND @CENTROCOSTO3 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO3
	ELSE IF @CONTCENTRO = 3 AND (@CENTROCOSTO4 != '' AND @CENTROCOSTO4 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO4
	ELSE IF @CONTCENTRO = 4 AND (@CENTROCOSTO5 != '' AND @CENTROCOSTO5 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO5
	ELSE IF @CONTCENTRO = 5 AND (@CENTROCOSTO6 != '' AND @CENTROCOSTO6 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO6
	ELSE IF @CONTCENTRO = 6 AND (@CENTROCOSTO7 != '' AND @CENTROCOSTO7 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO7
	ELSE IF @CONTCENTRO = 7 AND (@CENTROCOSTO8 != '' AND @CENTROCOSTO8 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO8
	ELSE IF @CONTCENTRO = 8 AND (@CENTROCOSTO9 != '' AND @CENTROCOSTO9 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO9
	ELSE IF @CONTCENTRO = 9 AND (@CENTROCOSTO10 != '' AND @CENTROCOSTO10 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO10
	ELSE IF @CONTCENTRO = 10 AND (@CENTROCOSTO11 != '' AND @CENTROCOSTO11 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO11
	ELSE IF @CONTCENTRO = 11 AND (@CENTROCOSTO12 != '' AND @CENTROCOSTO12 != ' ')
		SET @LCENTROCOSTO = @CENTROCOSTO12
	ELSE IF @CONTCENTRO = 0
		SET @LCENTROCOSTO = '%'
	ELSE BREAK
			
	SET @CONTCUENTA = 0

	WHILE ( @CONTCUENTA < 12 )
	BEGIN
		IF @CONTCUENTA = 0 AND (@CUENTACONTABLE1 != '' AND @CUENTACONTABLE1 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE1
		ELSE IF @CONTCUENTA = 1 AND (@CUENTACONTABLE2 != '' AND @CUENTACONTABLE2 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE2
		ELSE IF @CONTCUENTA = 2 AND (@CUENTACONTABLE3 != '' AND @CUENTACONTABLE3 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE3
		ELSE IF @CONTCUENTA = 3 AND (@CUENTACONTABLE4 != '' AND @CUENTACONTABLE4 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE4
		ELSE IF @CONTCUENTA = 4 AND (@CUENTACONTABLE5 != '' AND @CUENTACONTABLE5 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE5
		ELSE IF @CONTCUENTA = 5 AND (@CUENTACONTABLE6 != '' AND @CUENTACONTABLE6 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE6
		ELSE IF @CONTCUENTA = 6 AND (@CUENTACONTABLE7 != '' AND @CUENTACONTABLE7 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE7
		ELSE IF @CONTCUENTA = 7 AND (@CUENTACONTABLE8 != '' AND @CUENTACONTABLE8 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE8
		ELSE IF @CONTCUENTA = 8 AND (@CUENTACONTABLE9 != '' AND @CUENTACONTABLE9 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE9
		ELSE IF @CONTCUENTA = 9 AND (@CUENTACONTABLE10 != '' AND @CUENTACONTABLE10 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE10
		ELSE IF @CONTCUENTA = 10 AND (@CUENTACONTABLE11 != '' AND @CUENTACONTABLE11 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE11
		ELSE IF @CONTCUENTA = 11 AND (@CUENTACONTABLE12 != '' AND @CUENTACONTABLE12 != ' ')
			SET @LCUENTACONTABLE = @CUENTACONTABLE12
		ELSE IF @CONTCUENTA = 0
			SET @LCUENTACONTABLE = '%'
		ELSE BREAK
		
		SET @CONTFASE= 0
	
		WHILE ( @CONTFASE < 12 )
		BEGIN
			IF @CONTFASE = 0 AND (@FASE1 != '' AND @FASE1 != ' ')
				SET @LFASE = @FASE1
			ELSE IF @CONTFASE = 1 AND (@FASE2 != '' AND @FASE2 != ' ')
				SET @LFASE = @FASE2
			ELSE IF @CONTFASE = 2 AND (@FASE3 != '' AND @FASE3 != ' ')
				SET @LFASE = @FASE3
			ELSE IF @CONTFASE = 3 AND (@FASE4 != '' AND @FASE4 != ' ')
				SET @LFASE = @FASE4
			ELSE IF @CONTFASE = 4 AND (@FASE5 != '' AND @FASE5 != ' ')
				SET @LFASE = @FASE5
			ELSE IF @CONTFASE = 5 AND (@FASE6 != '' AND @FASE6 != ' ')
				SET @LFASE = @FASE6
			ELSE IF @CONTFASE = 6 AND (@FASE7 != '' AND @FASE7 != ' ')
				SET @LFASE = @FASE7
			ELSE IF @CONTFASE = 7 AND (@FASE8 != '' AND @FASE8 != ' ')
				SET @LFASE = @FASE8
			ELSE IF @CONTFASE = 8 AND (@FASE9 != '' AND @FASE9 != ' ')
				SET @LFASE = @FASE9
			ELSE IF @CONTFASE = 9 AND (@FASE10 != '' AND @FASE10 != ' ')
				SET @LFASE = @FASE10
			ELSE IF @CONTFASE = 10 AND (@FASE11 != '' AND @FASE11 != ' ')
				SET @LFASE = @FASE11
			ELSE IF @CONTFASE = 11 AND (@FASE12 != '' AND @FASE12 != ' ')
				SET @LFASE = @FASE12
			ELSE IF @CONTFASE = 0
				SET @LFASE = '%'
			ELSE BREAK
			
			IF	@MONEDA = 'L'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))	
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_LOCAL,0) - ISNULL(CREDITO_LOCAL,0))
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END

			 END
			ELSE IF @MONEDA = 'D'
			 BEGIN			
				/*SE OBTIENE EL MOVIMIENTO*/
				IF @ANTESCIERRE = 'N'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))		
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
				 END
				ELSE IF @ANTESCIERRE = 'S'
				 BEGIN
					SELECT @MONTOINICIAL = SUM(ISNULL(DEBITO_DOLAR,0) - ISNULL(CREDITO_DOLAR,0))
					FROM	$$COMPANIA$$.MAYOR M (NOLOCK)
					WHERE	FECHA >= @FECHAINI AND FECHA <= @FECHAFIN
					AND CENTRO_COSTO LIKE @LCENTROCOSTO 					
					AND CUENTA_CONTABLE LIKE @LCUENTACONTABLE					
					AND FASE LIKE @LFASE
					AND (CONTABILIDAD = @TIPOCONTABILIDAD OR CONTABILIDAD = 'A')
					AND	ASIENTO NOT IN(	SELECT ASIENTO 
								FROM $$COMPANIA$$.HIST_CIERRE_CG NOLOCK
								WHERE FECHA_CIERRE = @FECHAFIN )
				 END
				ELSE
				 BEGIN
					SET @MONTO = 0
					BREAK					
				 END
			 END
			ELSE
			 BEGIN
				SET @MONTO = 0
				BREAK
			 END
			SET @MONTO = @MONTO + ISNULL(@MONTOINICIAL, 0)
			SET @CONTFASE = @CONTFASE + 1
		END
		SET @CONTCUENTA = @CONTCUENTA + 1
	END
	SET @CONTCENTRO = @CONTCENTRO + 1
 END

RETURN ISNULL(@MONTO,0)
END;



REMARK 
\
------------------------------------------------------------------ 
SE CREA LA FUNCIÓN GETMONTO
------------------------------------------------------------------
/

CREATE FUNCTION $$COMPANIA$$.GETMONTO(@OPCION AS INT, @ESLIKE AS INT,
@WHERECENTRO1 AS VARCHAR(25), @WHERECENTRO2 AS VARCHAR(25),
@WHERECENTRO3 AS VARCHAR(25), @WHERECENTRO4 AS VARCHAR(25), 
@WHERECENTRO5 AS VARCHAR(25), @WHERECENTRO6 AS VARCHAR(25),
@WHERECENTRO7 AS VARCHAR(25), @WHERECENTRO8 AS VARCHAR(25),
@WHERECENTRO9 AS VARCHAR(25), @WHERECENTRO10 AS VARCHAR(25), 
@WHERECENTRO11 AS VARCHAR(25), @WHERECENTRO12 AS VARCHAR(25),
@WHERECUENTA1 AS VARCHAR(25), @WHERECUENTA2 AS VARCHAR(25),
@WHERECUENTA3 AS VARCHAR(25), @WHERECUENTA4 AS VARCHAR(25), 
@WHERECUENTA5 AS VARCHAR(25), @WHERECUENTA6 AS VARCHAR(25),
@WHERECUENTA7 AS VARCHAR(25), @WHERECUENTA8 AS VARCHAR(25),
@WHERECUENTA9 AS VARCHAR(25), @WHERECUENTA10 AS VARCHAR(25), 
@WHERECUENTA11 AS VARCHAR(25), @WHERECUENTA12 AS VARCHAR(25),
@WHERENIT1 AS VARCHAR(25), @WHERENIT2 AS VARCHAR(25),
@WHERENIT3 AS VARCHAR(25), @WHERENIT4 AS VARCHAR(25), 
@WHERENIT5 AS VARCHAR(25), @WHERENIT6 AS VARCHAR(25),
@WHERENIT7 AS VARCHAR(25), @WHERENIT8 AS VARCHAR(25),
@WHERENIT9 AS VARCHAR(25), @WHERENIT10 AS VARCHAR(25),
@WHERENIT11 AS VARCHAR(25), @WHERENIT12 AS VARCHAR(25),
@WHEREFASE1 AS VARCHAR(25), @WHEREFASE2 AS VARCHAR(25),
@WHEREFASE3 AS VARCHAR(25), @WHEREFASE4 AS VARCHAR(25), 
@WHEREFASE5 AS VARCHAR(25), @WHEREFASE6 AS VARCHAR(25),
@WHEREFASE7 AS VARCHAR(25), @WHEREFASE8 AS VARCHAR(25),
@WHEREFASE9 AS VARCHAR(25), @WHEREFASE10 AS VARCHAR(25),
@WHEREFASE11 AS VARCHAR(25), @WHEREFASE12 AS VARCHAR(25),
@FECHAINICIAL AS DATETIME, 
@FECHAFINAL AS DATETIME, 
@TIPOCONTABILIDAD AS VARCHAR(1),  
@MONEDA AS VARCHAR(1), 
@ANTESCIERRE AS VARCHAR(1)) 
RETURNS DECIMAL(28,8)
AS 
BEGIN
DECLARE @MONTO DECIMAL(28,8)
DECLARE @CENTROLIKE VARCHAR(25)
DECLARE @CUENTALIKE VARCHAR(25)

SET @MONTO = 0

IF @OPCION = 1
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETSALDO(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 2
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETDEBITO(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 3
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETCREDITO(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 4
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETMOVIMIENTO(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 5
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETSALDONIT(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHERENIT1, @WHERENIT2, @WHERENIT3, @WHERENIT4, @WHERENIT5, @WHERENIT6, 
	@WHERENIT7, @WHERENIT8, @WHERENIT9, @WHERENIT10, @WHERENIT11, @WHERENIT12,
	@FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 6
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETDEBITONIT(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHERENIT1, @WHERENIT2, @WHERENIT3, @WHERENIT4, @WHERENIT5, @WHERENIT6, 
	@WHERENIT7, @WHERENIT8, @WHERENIT9, @WHERENIT10, @WHERENIT11, @WHERENIT12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 7
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETCREDITONIT(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHERENIT1, @WHERENIT2, @WHERENIT3, @WHERENIT4, @WHERENIT5, @WHERENIT6, 
	@WHERENIT7, @WHERENIT8, @WHERENIT9, @WHERENIT10, @WHERENIT11, @WHERENIT12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 8
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETMOVIMIENTONIT(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHERENIT1, @WHERENIT2, @WHERENIT3, @WHERENIT4, @WHERENIT5, @WHERENIT6, 
	@WHERENIT7, @WHERENIT8, @WHERENIT9, @WHERENIT10, @WHERENIT11, @WHERENIT12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 9
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETSALDOFASE(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHEREFASE1, @WHEREFASE2, @WHEREFASE3, @WHEREFASE4, @WHEREFASE5, @WHEREFASE6, 
	@WHEREFASE7, @WHEREFASE8, @WHEREFASE9, @WHEREFASE10, @WHEREFASE11, @WHEREFASE12,
	@FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 10
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETDEBITOFASE(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHEREFASE1, @WHEREFASE2, @WHEREFASE3, @WHEREFASE4, @WHEREFASE5, @WHEREFASE6, 
	@WHEREFASE7, @WHEREFASE8, @WHEREFASE9, @WHEREFASE10, @WHEREFASE11, @WHEREFASE12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 11
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETCREDITOFASE(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHEREFASE1, @WHEREFASE2, @WHEREFASE3, @WHEREFASE4, @WHEREFASE5, @WHEREFASE6, 
	@WHEREFASE7, @WHEREFASE8, @WHEREFASE9, @WHEREFASE10, @WHEREFASE11, @WHEREFASE12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE IF @OPCION = 12
BEGIN
	SELECT @MONTO = $$COMPANIA$$.GETMOVIMIENTOFASE(@ESLIKE, 
	@WHERECENTRO1, @WHERECENTRO2, @WHERECENTRO3, @WHERECENTRO4, @WHERECENTRO5, @WHERECENTRO6, 
	@WHERECENTRO7, @WHERECENTRO8, @WHERECENTRO9, @WHERECENTRO10, @WHERECENTRO11, @WHERECENTRO12, 
	@WHERECUENTA1, @WHERECUENTA2, @WHERECUENTA3, @WHERECUENTA4, @WHERECUENTA5, @WHERECUENTA6, 
	@WHERECUENTA7, @WHERECUENTA8, @WHERECUENTA9, @WHERECUENTA10, @WHERECUENTA11, @WHERECUENTA12,
	@WHEREFASE1, @WHEREFASE2, @WHEREFASE3, @WHEREFASE4, @WHEREFASE5, @WHEREFASE6, 
	@WHEREFASE7, @WHEREFASE8, @WHEREFASE9, @WHEREFASE10, @WHEREFASE11, @WHEREFASE12,
	@FECHAINICIAL, @FECHAFINAL, @TIPOCONTABILIDAD, @MONEDA, @ANTESCIERRE)
END

ELSE
	SET @MONTO = 0

RETURN (ISNULL(@MONTO,0))
END;

REMARK 
\
------------------------------------------------------------------ 
SE CREA LOS INDICES DE LA TABLA MAYOR
------------------------------------------------------------------
/


CREATE NONCLUSTERED INDEX XMAYORMACRO ON $$COMPANIA$$.MAYOR 
(
	CONTABILIDAD ASC,
	FECHA ASC,
	CENTRO_COSTO ASC,
	CUENTA_CONTABLE ASC
);

CREATE NONCLUSTERED INDEX XMAYORMACRONIT ON $$COMPANIA$$.MAYOR 
(
	CONTABILIDAD ASC,
	FECHA ASC,
	NIT ASC,
	CENTRO_COSTO ASC,
	CUENTA_CONTABLE ASC
);

REMARK 
\
------------------------------------------------------------------ 
SE ELIMINA Y CREA EL PROCEDIMIENTO PARA EL RECALCULO DE SALDOS
------------------------------------------------------------------
/


CREATE PROCEDURE $$COMPANIA$$.RECSALDO(
@P_CENTRO_COSTO AS VARCHAR(25),
@P_CUENTA_CONTABLE_INI AS VARCHAR(25),
@P_CUENTA_CONTABLE_FIN AS VARCHAR(25),
@P_PERIODO AS VARCHAR(11)
)
AS
DECLARE @CENTROCOSTOMIN VARCHAR(25), @CENTROCOSTOMAX VARCHAR(25),
	@CUENTACONTABLEMIN VARCHAR(25), @CUENTACONTABLEMAX VARCHAR(25),
	@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),
	@FECHAMIN DATETIME,	
	@SALDOFISCALLOCAL DECIMAL(28,8), @SALDOFISCALDOLAR DECIMAL(28,8),
	@SALDOCORPORATIVOLOCAL DECIMAL(28,8), @SALDOCORPORATIVODOLAR DECIMAL(28,8),
	@SALDOFISCALUND DECIMAL(28,8), @SALDOCORPORATIVOUND DECIMAL(28,8),
	@SCENTROCOSTO VARCHAR(25), @SCUENTACONTABLE VARCHAR(25), 
	@SFECHA DATETIME, @SDEBITOFISCALLOCAL DECIMAL(28,8), @SDEBITOFISCALDOLAR DECIMAL(28,8), 
	@SCREDITOFISCALLOCAL DECIMAL(28,8), @SCREDITOFISCALDOLAR DECIMAL(28,8),
	@SDEBITOFISCALUNIDAD DECIMAL(28,8), @SCREDITOFISCALUNIDAD DECIMAL(28,8),
	@SDEBITOCORPORLOCAL DECIMAL(28,8), @SDEBITOCORPORDOLAR DECIMAL(28,8), 
	@SCREDITOCORPORLOCAL DECIMAL(28,8), @SCREDITOCORPORDOLAR DECIMAL(28,8),
	@SDEBITOCORPORUNIDAD DECIMAL(28,8), @SCREDITOCORPORUNIDAD DECIMAL(28,8)

DECLARE CURCTOCSO CURSOR FOR
	   SELECT MIN(CENTRO_COSTO), MAX(CENTRO_COSTO)
	   FROM $$COMPANIA$$.CENTRO_COSTO
	   WHERE ACEPTA_DATOS = 'S'

DECLARE MINCTACBLE CURSOR FOR
	   SELECT MIN(CUENTA_CONTABLE)
	   FROM $$COMPANIA$$.CUENTA_CONTABLE
	   WHERE ACEPTA_DATOS = 'S'

DECLARE MAXCTACBLE CURSOR FOR
	   SELECT MAX(CUENTA_CONTABLE)
	   FROM $$COMPANIA$$.CUENTA_CONTABLE
	   WHERE ACEPTA_DATOS = 'S'

DECLARE MINFECHAMAYOR CURSOR FOR
	   SELECT MIN(FECHA)
	   FROM $$COMPANIA$$.MAYOR

BEGIN

IF @P_CENTRO_COSTO = 'NULL' OR @P_CENTRO_COSTO = 'NULO' OR @P_CENTRO_COSTO IS NULL
	BEGIN
		 OPEN CURCTOCSO
		 FETCH NEXT FROM CURCTOCSO
			  INTO @CENTROCOSTOMIN, @CENTROCOSTOMAX
		 CLOSE CURCTOCSO		
	END
ELSE
	BEGIN
		SET @CENTROCOSTOMIN = @P_CENTRO_COSTO
		SET @CENTROCOSTOMAX = @P_CENTRO_COSTO
	END


IF @P_CUENTA_CONTABLE_INI = 'NULL' OR @P_CUENTA_CONTABLE_INI = 'NULO' OR @P_CUENTA_CONTABLE_INI IS NULL
	BEGIN
		OPEN MINCTACBLE
		FETCH NEXT FROM MINCTACBLE
			  INTO @CUENTACONTABLEMIN
		CLOSE MINCTACBLE
	END
ELSE
	SET @CUENTACONTABLEMIN = @P_CUENTA_CONTABLE_INI


IF @P_CUENTA_CONTABLE_FIN = 'NULL' OR @P_CUENTA_CONTABLE_FIN = 'NULO' OR @P_CUENTA_CONTABLE_FIN IS NULL
	BEGIN
		OPEN MAXCTACBLE
		FETCH NEXT FROM MAXCTACBLE
			  INTO @CUENTACONTABLEMAX
		CLOSE MAXCTACBLE
	END
ELSE
	SET @CUENTACONTABLEMAX = @P_CUENTA_CONTABLE_FIN


IF @P_PERIODO = 'NULL' OR @P_PERIODO = 'NULO' OR @P_PERIODO IS NULL
	BEGIN
   		OPEN MINFECHAMAYOR
		FETCH NEXT FROM MINFECHAMAYOR
			  INTO @FECHAMIN
		CLOSE MINFECHAMAYOR
	END
ELSE
	SET @FECHAMIN = CONVERT(DATETIME, @P_PERIODO, 111)


SET @SALDOFISCALLOCAL = 0
SET @SALDOFISCALDOLAR = 0
SET @SALDOCORPORATIVOLOCAL = 0
SET @SALDOCORPORATIVODOLAR = 0
SET @SALDOFISCALUND = 0
SET @SALDOCORPORATIVOUND = 0

SET @LCENTROCOSTO = 'VACIO'
SET @LCUENTACONTABLE = 'VACIO'


DELETE FROM $$COMPANIA$$.SALDO
WHERE	CENTRO_COSTO 	>=	@CENTROCOSTOMIN
AND 	CENTRO_COSTO 	<=	@CENTROCOSTOMAX
AND		CUENTA_CONTABLE >= @CUENTACONTABLEMIN
AND		CUENTA_CONTABLE <= @CUENTACONTABLEMAX
AND		FECHA >= @FECHAMIN

DECLARE CURSALDO CURSOR FOR
	SELECT	M.CENTRO_COSTO,
			M.CUENTA_CONTABLE,
			M.FECHA,				
			SUM(M.DEBITO_LOCAL_F) AS DEBITO_FISC_LOCAL,			
			SUM(M.CREDITO_LOCAL_F) AS CREDITO_FISC_LOCAL,			
			SUM(M.DEBITO_LOCAL_C) AS DEBITO_CORP_LOCAL,			
			SUM(M.CREDITO_LOCAL_C) AS CREDITO_CORP_LOCAL,			
			SUM(M.DEBITO_DOLAR_F) AS DEBITO_FISC_DOLAR,			
			SUM(M.CREDITO_DOLAR_F) AS CREDITO_FISC_DOLAR,			
			SUM(M.DEBITO_DOLAR_C) AS DEBITO_CORP_DOLAR,			
			SUM(M.CREDITO_DOLAR_C) AS CREDITO_CORP_DOLAR,			
			SUM(M.DEBITO_UNIDADES_F) AS DEBITO_FISC_UND,			
			SUM(M.DEBITO_UNIDADES_C) AS DEBITO_CORP_UND,			
			SUM(M.CREDITO_UNIDADES_F) AS CREDITO_FISC_UND,			
			SUM(M.CREDITO_UNIDADES_C) AS CREDITO_CORP_UND
	FROM (	SELECT	CENTRO_COSTO,
					CUENTA_CONTABLE,
					(SELECT MIN(P.FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE P	WHERE P.FECHA_FINAL >= FECHA) AS FECHA,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_LOCAL,0)
					WHEN 'F' THEN ISNULL(DEBITO_LOCAL,0)
					ELSE 0
					END AS DEBITO_LOCAL_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_LOCAL,0)
					WHEN 'F' THEN ISNULL(CREDITO_LOCAL,0)
					ELSE 0
					END AS CREDITO_LOCAL_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_DOLAR,0)
					WHEN 'F' THEN ISNULL(DEBITO_DOLAR,0)
					ELSE 0
					END AS DEBITO_DOLAR_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_DOLAR,0)
					WHEN 'F' THEN ISNULL(CREDITO_DOLAR,0)
					ELSE 0
					END AS CREDITO_DOLAR_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_UNIDADES,0)
					WHEN 'F' THEN ISNULL(DEBITO_UNIDADES,0)
					ELSE 0
					END AS DEBITO_UNIDADES_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_UNIDADES,0)
					WHEN 'F' THEN ISNULL(CREDITO_UNIDADES,0)
					ELSE 0
					END AS CREDITO_UNIDADES_F,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_LOCAL,0)
					WHEN 'C' THEN ISNULL(DEBITO_LOCAL,0)
					ELSE 0
					END AS DEBITO_LOCAL_C,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_LOCAL,0)
					WHEN 'C' THEN ISNULL(CREDITO_LOCAL,0)
					ELSE 0
					END AS CREDITO_LOCAL_C,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_DOLAR,0)
					WHEN 'C' THEN ISNULL(DEBITO_DOLAR,0)
					ELSE 0
					END AS DEBITO_DOLAR_C,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_DOLAR,0)
					WHEN 'C' THEN ISNULL(CREDITO_DOLAR,0)
					ELSE 0
					END AS CREDITO_DOLAR_C,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(DEBITO_UNIDADES,0)
					WHEN 'C' THEN ISNULL(DEBITO_UNIDADES,0)
					ELSE 0
					END AS DEBITO_UNIDADES_C,
					CASE CONTABILIDAD
					WHEN 'A' THEN ISNULL(CREDITO_UNIDADES,0)
					WHEN 'C' THEN ISNULL(CREDITO_UNIDADES,0)
					ELSE 0
					END AS CREDITO_UNIDADES_C
			FROM $$COMPANIA$$.MAYOR
			WHERE	CENTRO_COSTO 	>=	@CENTROCOSTOMIN
			AND 	CENTRO_COSTO 	<=	@CENTROCOSTOMAX
			AND		CUENTA_CONTABLE >= @CUENTACONTABLEMIN
			AND		CUENTA_CONTABLE <= @CUENTACONTABLEMAX
			AND		FECHA >= @FECHAMIN
		) M
	WHERE	M.CENTRO_COSTO 	>=	@CENTROCOSTOMIN
	AND 	M.CENTRO_COSTO 	<=	@CENTROCOSTOMAX
	AND		M.CUENTA_CONTABLE >= @CUENTACONTABLEMIN
	AND		M.CUENTA_CONTABLE <= @CUENTACONTABLEMAX
	AND		M.FECHA >= @FECHAMIN	
	GROUP BY CENTRO_COSTO, CUENTA_CONTABLE, FECHA
	ORDER BY CENTRO_COSTO, CUENTA_CONTABLE, FECHA

OPEN CURSALDO

FETCH NEXT FROM CURSALDO 
INTO	@SCENTROCOSTO, @SCUENTACONTABLE, @SFECHA, @SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
		@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR, 
		@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD



WHILE @@FETCH_STATUS = 0 
	BEGIN 

		IF	(@LCENTROCOSTO <> @SCENTROCOSTO) OR (@LCUENTACONTABLE <> @SCUENTACONTABLE)
			BEGIN
					SET @LCENTROCOSTO = @SCENTROCOSTO
					SET @LCUENTACONTABLE = @SCUENTACONTABLE
					
					SET @SALDOFISCALLOCAL = 0
					SET @SALDOFISCALDOLAR = 0
					SET @SALDOCORPORATIVOLOCAL = 0
					SET @SALDOCORPORATIVODOLAR = 0
					SET @SALDOFISCALUND = 0
					SET @SALDOCORPORATIVOUND = 0
					
					
					DECLARE CURSALDO2 CURSOR FOR (SELECT SALDO_FISC_LOCAL, SALDO_FISC_DOLAR, SALDO_FISC_UND,
											   SALDO_CORP_LOCAL, SALDO_CORP_DOLAR, SALDO_CORP_UND						
										FROM   $$COMPANIA$$.SALDO
										WHERE	CENTRO_COSTO = @SCENTROCOSTO
										AND		CUENTA_CONTABLE = @SCUENTACONTABLE
										AND		FECHA = ( SELECT MAX(FECHA) 
														  FROM $$COMPANIA$$.SALDO
														  WHERE	CENTRO_COSTO = @SCENTROCOSTO
														  AND	CUENTA_CONTABLE = @SCUENTACONTABLE
														  AND	FECHA < @SFECHA))

					OPEN CURSALDO2
					FETCH NEXT FROM CURSALDO2
					INTO @SALDOFISCALLOCAL, @SALDOFISCALDOLAR, @SALDOCORPORATIVOLOCAL, @SALDOCORPORATIVODOLAR, @SALDOFISCALUND, @SALDOCORPORATIVOUND
					CLOSE CURSALDO2
					DEALLOCATE CURSALDO2
			END

		SET @SALDOFISCALLOCAL = ROUND(@SALDOFISCALLOCAL + ( @SDEBITOFISCALLOCAL - @SCREDITOFISCALLOCAL),7)
		SET @SALDOFISCALDOLAR = ROUND(@SALDOFISCALDOLAR + ( @SDEBITOFISCALDOLAR - @SCREDITOFISCALDOLAR),7)
		SET @SALDOFISCALUND = ROUND(@SALDOFISCALUND + ( @SDEBITOFISCALUNIDAD - @SCREDITOFISCALUNIDAD),7)
		SET @SALDOCORPORATIVOLOCAL = ROUND(@SALDOCORPORATIVOLOCAL + ( @SDEBITOCORPORLOCAL - @SCREDITOCORPORLOCAL),7)
		SET @SALDOCORPORATIVODOLAR = ROUND(@SALDOCORPORATIVODOLAR + ( @SDEBITOCORPORDOLAR - @SCREDITOCORPORDOLAR),7)
		SET @SALDOCORPORATIVOUND = ROUND(@SALDOCORPORATIVOUND + ( @SDEBITOCORPORUNIDAD - @SCREDITOCORPORUNIDAD)	,7)

		INSERT INTO $$COMPANIA$$.SALDO
		(CENTRO_COSTO, CUENTA_CONTABLE, FECHA,
		SALDO_FISC_LOCAL, SALDO_FISC_DOLAR, SALDO_CORP_LOCAL, SALDO_CORP_DOLAR,
		DEBITO_FISC_LOCAL, CREDITO_FISC_LOCAL, DEBITO_CORP_LOCAL, CREDITO_CORP_LOCAL,
		DEBITO_FISC_DOLAR, CREDITO_FISC_DOLAR, DEBITO_CORP_DOLAR, CREDITO_CORP_DOLAR,
		SALDO_FISC_UND,SALDO_CORP_UND,
		DEBITO_FISC_UND, DEBITO_CORP_UND,CREDITO_FISC_UND,CREDITO_CORP_UND)
		VALUES
		(@SCENTROCOSTO, @SCUENTACONTABLE, @SFECHA,
		@SALDOFISCALLOCAL, @SALDOFISCALDOLAR, @SALDOCORPORATIVOLOCAL, @SALDOCORPORATIVODOLAR, 
		@SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
		@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR,
		@SALDOFISCALUND, @SALDOCORPORATIVOUND,
		@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD )

	FETCH NEXT FROM CURSALDO 
	INTO	@SCENTROCOSTO, @SCUENTACONTABLE, @SFECHA, @SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
			@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR, 
			@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD

	END 
CLOSE CURSALDO
DEALLOCATE CURSALDO
DEALLOCATE CURCTOCSO
DEALLOCATE MINCTACBLE
DEALLOCATE MINFECHAMAYOR
DEALLOCATE MAXCTACBLE


END;





REMARK 
\
------------------------------------------------------------------ 
SE ELIMINA Y CREA EL PROCEDIMIENTO RECSALDO_NIT
------------------------------------------------------------------
/

DROP PROCEDURE $$COMPANIA$$.RECSALDO_NIT;

CREATE PROCEDURE $$COMPANIA$$.RECSALDO_NIT(
	@P_CENTRO_COSTO AS VARCHAR(25),
	@P_CUENTA_CONTABLE_INI AS VARCHAR(25),
	@P_CUENTA_CONTABLE_FIN AS VARCHAR(25),
	@P_NIT_INI AS VARCHAR(20),
	@P_NIT_MAX AS VARCHAR(20),
	@P_PERIODO AS VARCHAR(11)
	)
	AS
	DECLARE @NITMIN VARCHAR(20), @NITMAX VARCHAR(20), 
		@CENTROCOSTOMIN VARCHAR(25), @CENTROCOSTOMAX VARCHAR(25),
		@CUENTACONTABLEMIN VARCHAR(25), @CUENTACONTABLEMAX VARCHAR(25),
		@LCENTROCOSTO VARCHAR(25), @LCUENTACONTABLE VARCHAR(25),
		@LNIT VARCHAR(20), @FECHAMIN DATETIME,	
		@SALDOFISCALLOCAL DECIMAL(28,8), @SALDOFISCALDOLAR DECIMAL(28,8),
		@SALDOCORPORATIVOLOCAL DECIMAL(28,8), @SALDOCORPORATIVODOLAR DECIMAL(28,8),
		@SALDOFISCALUND DECIMAL(28,8), @SALDOCORPORATIVOUND DECIMAL(28,8),
		@SNIT VARCHAR(20), @SCENTROCOSTO VARCHAR(25), @SCUENTACONTABLE VARCHAR(25), 
		@SFECHA DATETIME, @SDEBITOFISCALLOCAL DECIMAL(28,8), @SDEBITOFISCALDOLAR DECIMAL(28,8), 
		@SCREDITOFISCALLOCAL DECIMAL(28,8), @SCREDITOFISCALDOLAR DECIMAL(28,8),
		@SDEBITOFISCALUNIDAD DECIMAL(28,8), @SCREDITOFISCALUNIDAD DECIMAL(28,8),
		@SDEBITOCORPORLOCAL DECIMAL(28,8), @SDEBITOCORPORDOLAR DECIMAL(28,8), 
		@SCREDITOCORPORLOCAL DECIMAL(28,8), @SCREDITOCORPORDOLAR DECIMAL(28,8),
		@SDEBITOCORPORUNIDAD DECIMAL(28,8), @SCREDITOCORPORUNIDAD DECIMAL(28,8)

	DECLARE CURNITMIN CURSOR FOR
		   SELECT MIN(NIT)
		   FROM $$COMPANIA$$.NIT

	DECLARE CURNITMAX CURSOR FOR
		   SELECT MAX(NIT)
		   FROM $$COMPANIA$$.NIT	   

	DECLARE CURCTOCSO CURSOR FOR
		   SELECT MIN(CENTRO_COSTO), MAX(CENTRO_COSTO)
		   FROM $$COMPANIA$$.CENTRO_COSTO
		   WHERE ACEPTA_DATOS = 'S'

	DECLARE MINCTACBLE CURSOR FOR
		   SELECT MIN(CUENTA_CONTABLE)
		   FROM $$COMPANIA$$.CUENTA_CONTABLE
		   WHERE ACEPTA_DATOS = 'S'

	DECLARE MAXCTACBLE CURSOR FOR
		   SELECT MAX(CUENTA_CONTABLE)
		   FROM $$COMPANIA$$.CUENTA_CONTABLE
		   WHERE ACEPTA_DATOS = 'S'

	DECLARE MINFECHAMAYOR CURSOR FOR
		   SELECT MIN(FECHA)
		   FROM $$COMPANIA$$.MAYOR

	BEGIN

	IF @P_NIT_INI = 'NULL' OR @P_NIT_INI = 'NULO' OR @P_NIT_INI IS NULL
	BEGIN
		 OPEN CURNITMIN
		 FETCH NEXT FROM CURNITMIN
			  INTO @NITMIN
		 CLOSE CURNITMIN
	END
	ELSE
		SET @NITMIN = @P_NIT_INI

	IF @P_NIT_MAX = 'NULL' OR @P_NIT_MAX = 'NULO' OR @P_NIT_MAX IS NULL
	BEGIN
		 OPEN CURNITMAX
		 FETCH NEXT FROM CURNITMAX
			  INTO @NITMAX
		 CLOSE CURNITMAX
	END
	ELSE
		SET @NITMAX = @P_NIT_MAX


	IF @P_CENTRO_COSTO = 'NULL' OR @P_CENTRO_COSTO = 'NULO' OR @P_CENTRO_COSTO IS NULL
	BEGIN
		 OPEN CURCTOCSO
		 FETCH NEXT FROM CURCTOCSO
			  INTO @CENTROCOSTOMIN, @CENTROCOSTOMAX
		 CLOSE CURCTOCSO
	END
	ELSE
	BEGIN
		SET @CENTROCOSTOMIN = @P_CENTRO_COSTO
		SET @CENTROCOSTOMAX = @P_CENTRO_COSTO
	END


	IF @P_CUENTA_CONTABLE_INI = 'NULL' OR @P_CUENTA_CONTABLE_INI = 'NULO' OR @P_CUENTA_CONTABLE_INI IS NULL
	BEGIN
		OPEN MINCTACBLE
		FETCH NEXT FROM MINCTACBLE
			  INTO @CUENTACONTABLEMIN
		CLOSE MINCTACBLE
	END
	ELSE
		SET @CUENTACONTABLEMIN = @P_CUENTA_CONTABLE_INI



	IF @P_CUENTA_CONTABLE_FIN = 'NULL' OR @P_CUENTA_CONTABLE_FIN = 'NULO' OR @P_CUENTA_CONTABLE_FIN IS NULL
	BEGIN
		OPEN MAXCTACBLE
		FETCH NEXT FROM MAXCTACBLE
			  INTO @CUENTACONTABLEMAX
		CLOSE MAXCTACBLE
	END
	ELSE
		SET @CUENTACONTABLEMAX = @P_CUENTA_CONTABLE_FIN


	IF @P_PERIODO = 'NULL' OR @P_PERIODO = 'NULO' OR @P_PERIODO IS NULL
	BEGIN
		OPEN MINFECHAMAYOR
		FETCH NEXT FROM MINFECHAMAYOR
			  INTO @FECHAMIN
		CLOSE MINFECHAMAYOR
	END
	ELSE
		SET @FECHAMIN = CONVERT(DATETIME, @P_PERIODO, 111)

	SET @SALDOFISCALLOCAL = 0
	SET @SALDOFISCALDOLAR = 0
	SET @SALDOCORPORATIVOLOCAL = 0
	SET @SALDOCORPORATIVODOLAR = 0
	SET @SALDOFISCALUND = 0
	SET @SALDOCORPORATIVOUND = 0

	SET @LCENTROCOSTO = 'VACIO'
	SET @LCUENTACONTABLE = 'VACIO'
	SET @LNIT = 'VACIO'

	DELETE FROM $$COMPANIA$$.SALDO_NIT
	WHERE	CENTRO_COSTO >= @CENTROCOSTOMIN
	AND 	CENTRO_COSTO <= @CENTROCOSTOMAX
	AND	CUENTA_CONTABLE >= @CUENTACONTABLEMIN
	AND	CUENTA_CONTABLE <= @CUENTACONTABLEMAX
	AND	NIT >= @NITMIN
	AND 	NIT <= @NITMAX
	AND	FECHA >= @FECHAMIN


	DECLARE CURSALDO CURSOR FOR
		SELECT	M.CENTRO_COSTO,
				M.CUENTA_CONTABLE,
				M.NIT,
				M.FECHA,				
				SUM(M.DEBITO_LOCAL_F) AS DEBITO_FISC_LOCAL,			
				SUM(M.CREDITO_LOCAL_F) AS CREDITO_FISC_LOCAL,			
				SUM(M.DEBITO_LOCAL_C) AS DEBITO_CORP_LOCAL,			
				SUM(M.CREDITO_LOCAL_C) AS CREDITO_CORP_LOCAL,			
				SUM(M.DEBITO_DOLAR_F) AS DEBITO_FISC_DOLAR,			
				SUM(M.CREDITO_DOLAR_F) AS CREDITO_FISC_DOLAR,			
				SUM(M.DEBITO_DOLAR_C) AS DEBITO_CORP_DOLAR,			
				SUM(M.CREDITO_DOLAR_C) AS CREDITO_CORP_DOLAR,			
				SUM(M.DEBITO_UNIDADES_F) AS DEBITO_FISC_UND,			
				SUM(M.DEBITO_UNIDADES_C) AS DEBITO_CORP_UND,			
				SUM(M.CREDITO_UNIDADES_F) AS CREDITO_FISC_UND,			
				SUM(M.CREDITO_UNIDADES_C) AS CREDITO_CORP_UND
		FROM (	SELECT	CENTRO_COSTO,
						CUENTA_CONTABLE,
						NIT,
						(SELECT MIN(P.FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE P	WHERE P.FECHA_FINAL >= FECHA) AS FECHA,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_LOCAL,0)
						WHEN 'F' THEN ISNULL(DEBITO_LOCAL,0)
						ELSE 0
						END AS DEBITO_LOCAL_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_LOCAL,0)
						WHEN 'F' THEN ISNULL(CREDITO_LOCAL,0)
						ELSE 0
						END AS CREDITO_LOCAL_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_DOLAR,0)
						WHEN 'F' THEN ISNULL(DEBITO_DOLAR,0)
						ELSE 0
						END AS DEBITO_DOLAR_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_DOLAR,0)
						WHEN 'F' THEN ISNULL(CREDITO_DOLAR,0)
						ELSE 0
						END AS CREDITO_DOLAR_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_UNIDADES,0)
						WHEN 'F' THEN ISNULL(DEBITO_UNIDADES,0)
						ELSE 0
						END AS DEBITO_UNIDADES_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_UNIDADES,0)
						WHEN 'F' THEN ISNULL(CREDITO_UNIDADES,0)
						ELSE 0
						END AS CREDITO_UNIDADES_F,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_LOCAL,0)
						WHEN 'C' THEN ISNULL(DEBITO_LOCAL,0)
						ELSE 0
						END AS DEBITO_LOCAL_C,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_LOCAL,0)
						WHEN 'C' THEN ISNULL(CREDITO_LOCAL,0)
						ELSE 0
						END AS CREDITO_LOCAL_C,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_DOLAR,0)
						WHEN 'C' THEN ISNULL(DEBITO_DOLAR,0)
						ELSE 0
						END AS DEBITO_DOLAR_C,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_DOLAR,0)
						WHEN 'C' THEN ISNULL(CREDITO_DOLAR,0)
						ELSE 0
						END AS CREDITO_DOLAR_C,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(DEBITO_UNIDADES,0)
						WHEN 'C' THEN ISNULL(DEBITO_UNIDADES,0)
						ELSE 0
						END AS DEBITO_UNIDADES_C,
						CASE CONTABILIDAD
						WHEN 'A' THEN ISNULL(CREDITO_UNIDADES,0)
						WHEN 'C' THEN ISNULL(CREDITO_UNIDADES,0)
						ELSE 0
						END AS CREDITO_UNIDADES_C
				FROM $$COMPANIA$$.MAYOR
				WHERE	CENTRO_COSTO 	>=	@CENTROCOSTOMIN
				AND 	CENTRO_COSTO 	<=	@CENTROCOSTOMAX
				AND		CUENTA_CONTABLE >= @CUENTACONTABLEMIN
				AND		CUENTA_CONTABLE <= @CUENTACONTABLEMAX
				AND		NIT >=	@NITMIN
				AND 	NIT <=	@NITMAX
				AND		FECHA >= @FECHAMIN
			) M
		WHERE	M.CENTRO_COSTO 	>=	@CENTROCOSTOMIN
		AND 	M.CENTRO_COSTO 	<=	@CENTROCOSTOMAX
		AND		M.CUENTA_CONTABLE >= @CUENTACONTABLEMIN
		AND		M.CUENTA_CONTABLE <= @CUENTACONTABLEMAX
		AND		M.NIT >=	@NITMIN
		AND 	M.NIT <=	@NITMAX
		AND		M.FECHA >= @FECHAMIN	
		GROUP BY CENTRO_COSTO, CUENTA_CONTABLE, NIT, FECHA
		ORDER BY CENTRO_COSTO, CUENTA_CONTABLE, NIT, FECHA

	OPEN CURSALDO

	FETCH NEXT FROM CURSALDO 
	INTO	@SCENTROCOSTO, @SCUENTACONTABLE, @SNIT, @SFECHA, @SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
			@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR, 
			@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD



	WHILE @@FETCH_STATUS = 0 
		BEGIN 

			IF	(@LCENTROCOSTO <> @SCENTROCOSTO) OR (@LCUENTACONTABLE <> @SCUENTACONTABLE) OR (@LNIT <> @SNIT)
				BEGIN
						SET @LCENTROCOSTO = @SCENTROCOSTO
						SET @LCUENTACONTABLE = @SCUENTACONTABLE
						SET @LNIT = @SNIT

						SET @SALDOFISCALLOCAL = 0
						SET @SALDOFISCALDOLAR = 0
						SET @SALDOCORPORATIVOLOCAL = 0
						SET @SALDOCORPORATIVODOLAR = 0
						SET @SALDOFISCALUND = 0
						SET @SALDOCORPORATIVOUND = 0


						DECLARE CURSALDO2 CURSOR FOR (SELECT SALDO_FISC_LOCAL, SALDO_FISC_DOLAR, SALDO_FISC_UND,
												   SALDO_CORP_LOCAL, SALDO_CORP_DOLAR, SALDO_CORP_UND						
											FROM   $$COMPANIA$$.SALDO_NIT
											WHERE	CENTRO_COSTO = @SCENTROCOSTO
											AND		CUENTA_CONTABLE = @SCUENTACONTABLE
											AND		NIT =	@SNIT
											AND		FECHA = ( SELECT MAX(FECHA) 
															  FROM $$COMPANIA$$.SALDO_NIT
															  WHERE	CENTRO_COSTO = @SCENTROCOSTO
															  AND	CUENTA_CONTABLE = @SCUENTACONTABLE
															  AND	NIT = @SNIT
															  AND	FECHA < @SFECHA))

						OPEN CURSALDO2
						FETCH NEXT FROM CURSALDO2
						INTO @SALDOFISCALLOCAL, @SALDOFISCALDOLAR, @SALDOCORPORATIVOLOCAL, @SALDOCORPORATIVODOLAR, @SALDOFISCALUND, @SALDOCORPORATIVOUND
						CLOSE CURSALDO2
						DEALLOCATE CURSALDO2
				END

			SET @SALDOFISCALLOCAL = ROUND(@SALDOFISCALLOCAL + ( @SDEBITOFISCALLOCAL - @SCREDITOFISCALLOCAL),7)
			SET @SALDOFISCALDOLAR = ROUND(@SALDOFISCALDOLAR + ( @SDEBITOFISCALDOLAR - @SCREDITOFISCALDOLAR),7)
			SET @SALDOFISCALUND = ROUND(@SALDOFISCALUND + ( @SDEBITOFISCALUNIDAD - @SCREDITOFISCALUNIDAD),7)
			SET @SALDOCORPORATIVOLOCAL = ROUND(@SALDOCORPORATIVOLOCAL + ( @SDEBITOCORPORLOCAL - @SCREDITOCORPORLOCAL),7)
			SET @SALDOCORPORATIVODOLAR = ROUND(@SALDOCORPORATIVODOLAR + ( @SDEBITOCORPORDOLAR - @SCREDITOCORPORDOLAR),7)
			SET @SALDOCORPORATIVOUND = ROUND(@SALDOCORPORATIVOUND + ( @SDEBITOCORPORUNIDAD - @SCREDITOCORPORUNIDAD),7)	

			INSERT INTO $$COMPANIA$$.SALDO_NIT
			(CENTRO_COSTO, CUENTA_CONTABLE, NIT, FECHA,
			SALDO_FISC_LOCAL, SALDO_FISC_DOLAR, SALDO_CORP_LOCAL, SALDO_CORP_DOLAR,
			DEBITO_FISC_LOCAL, CREDITO_FISC_LOCAL, DEBITO_CORP_LOCAL, CREDITO_CORP_LOCAL,
			DEBITO_FISC_DOLAR, CREDITO_FISC_DOLAR, DEBITO_CORP_DOLAR, CREDITO_CORP_DOLAR,
			SALDO_FISC_UND,SALDO_CORP_UND,
			DEBITO_FISC_UND, DEBITO_CORP_UND,CREDITO_FISC_UND,CREDITO_CORP_UND)
			VALUES
			(@SCENTROCOSTO, @SCUENTACONTABLE, @SNIT, @SFECHA,
			@SALDOFISCALLOCAL, @SALDOFISCALDOLAR, @SALDOCORPORATIVOLOCAL, @SALDOCORPORATIVODOLAR, 
			@SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
			@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR,
			@SALDOFISCALUND, @SALDOCORPORATIVOUND,
			@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD )

		FETCH NEXT FROM CURSALDO 
		INTO	@SCENTROCOSTO, @SCUENTACONTABLE, @SNIT, @SFECHA, @SDEBITOFISCALLOCAL, @SCREDITOFISCALLOCAL, @SDEBITOCORPORLOCAL, @SCREDITOCORPORLOCAL,
				@SDEBITOFISCALDOLAR, @SCREDITOFISCALDOLAR, @SDEBITOCORPORDOLAR, @SCREDITOCORPORDOLAR, 
				@SDEBITOFISCALUNIDAD, @SDEBITOCORPORUNIDAD, @SCREDITOFISCALUNIDAD, @SCREDITOCORPORUNIDAD

		END 
	CLOSE CURSALDO
	DEALLOCATE CURSALDO
	DEALLOCATE CURNITMIN
	DEALLOCATE CURNITMAX
	DEALLOCATE CURCTOCSO
	DEALLOCATE MINCTACBLE
	DEALLOCATE MINFECHAMAYOR
	DEALLOCATE MAXCTACBLE
END;



REMARK 
\
------------------------------------------------------------------ 
SE CREA EL TRIGGER PARA EL CACADE DE LA TABLA CENTROCUENTA 
------------------------------------------------------------------
/

create trigger $$COMPANIA$$.tD_CENTRO_CUENTA on $$COMPANIA$$.CENTRO_CUENTA for DELETE as
begin
  declare  @errno   int,
           @errmsg  VARCHAR(255)
    
    delete CENTRO_CUENTA
      from $$COMPANIA$$.CENTRO_CUENTA,deleted
      where        
        $$COMPANIA$$.CENTRO_CUENTA.CENTRO_GASTO = deleted.CENTRO_COSTO and
        $$COMPANIA$$.CENTRO_CUENTA.CUENTA_GASTO = deleted.CUENTA_CONTABLE
       
    delete CENTRO_CUENTA
      from $$COMPANIA$$.CENTRO_CUENTA,deleted
      where
        
        $$COMPANIA$$.CENTRO_CUENTA.CENTRO_POZO = deleted.CENTRO_COSTO and
        $$COMPANIA$$.CENTRO_CUENTA.CUENTA_POZO = deleted.CUENTA_CONTABLE
    
    return
error:
    raiserror (@errno, @errmsg, 0)
    rollback transaction
end;






CREATE VIEW $$COMPANIA$$.V_RET_CENTRO_CUENTA
AS
	SELECT * FROM 
	(
	SELECT 
		r.CODIGO_RETENCION,
		ec.CENTRO_COSTO,
		ec.CUENTA_CONTABLE
	FROM
		$$COMPANIA$$.RETENCIONES r
	INNER JOIN
		$$COMPANIA$$.EXCEP_CIUDAD ec
	ON
		r.CODIGO_RETENCION = ec.CODIGO_RETENCION AND
		r.TIPO_EXCEPCION = 'C'
	UNION
	SELECT 
		r.CODIGO_RETENCION,
		er.CENTRO_COSTO,
		er.CUENTA_CONTABLE
	FROM
		$$COMPANIA$$.RETENCIONES r
	INNER JOIN
		$$COMPANIA$$.EXCEP_REGIMEN er
	ON
		r.CODIGO_RETENCION = er.CODIGO_RETENCION AND
		r.TIPO_EXCEPCION = 'R'	
	UNION	
	SELECT 
		r.CODIGO_RETENCION,
		r.CTR_RETENCION,
		r.CTA_RETENCION
	FROM
		$$COMPANIA$$.RETENCIONES r
	WHERE
		r.TIPO_EXCEPCION = 'D'
	) t;
	
	
	

CREATE VIEW  $$COMPANIA$$.v_MayorDivG
AS
SELECT 
	m.ASIENTO				ASIENTO,
	m.CONSECUTIVO				CONSECUTIVO,
	m.CUENTA_CONTABLE			CUENTA_CONTABLE,
	cc.DESCRIPCION				DESCRIPCION_CUENTA,
	m.NIT					NIT,
	n.RAZON_SOCIAL				RAZON_SOCIAL,
	m.FECHA					FECHA,
	m.DEBITO_LOCAL				DEBITO_LOCAL,
	m.CREDITO_LOCAL				CREDITO_LOCAL,
	m.DEBITO_DOLAR				DEBITO_DOLAR,
	m.CREDITO_DOLAR				CREDITO_DOLAR,
	m.BASE_DOLAR				BASE_DOLAR,
	m.BASE_LOCAL				BASE_LOCAL,
	cc.SALDO_NORMAL				SALDO_NORMAL,
	md.PAIS 				PAIS,
	md.DIVISION_GEOGRAFICA1 		DIV_GEO1,
	md.DIVISION_GEOGRAFICA2 		DIV_GEO2,
	dg.NOMBRE				UBICACION,		
	m.CONTABILIDAD			        CONTABILIDAD	
FROM 
	$$COMPANIA$$.MAYOR m
INNER JOIN
	$$COMPANIA$$.CUENTA_CONTABLE cc
ON
	m.CUENTA_CONTABLE = cc.CUENTA_CONTABLE
INNER JOIN
	$$COMPANIA$$.NIT n
ON
	m.NIT = n.NIT
LEFT OUTER JOIN
	$$COMPANIA$$.MAYOR_DIVISION_GEOGRAFICA md
ON
	m.ASIENTO = md.ASIENTO AND
	m.CONSECUTIVO = md.CONSECUTIVO
LEFT OUTER JOIN
	$$COMPANIA$$.DIVISION_GEOGRAFICA2 dg
ON
	dg.PAIS = md.PAIS AND
	dg.DIVISION_GEOGRAFICA1 = md.DIVISION_GEOGRAFICA1 AND
	dg.DIVISION_GEOGRAFICA2 = md.DIVISION_GEOGRAFICA2;
	
	
REMARK 
\
 ------------------------------------------------------------------
 Crea funcion para obtener el tipo de cambio de los documentos y de las pólizas contables.
 ------------------------------------------------------------------
/

create function $$COMPANIA$$.[ObtenerTipoCambio]
(@moneda varchar(4), @fecha datetime)
returns decimal(28,8)
begin
/* SE DECLARAN LAS VARIABLES*/
  DECLARE @MONTO DECIMAL(28,8) 
  
  /* SE OBTIENE EL MONTO SEGÚN LA MONEDA Y LA FECHA MÁS PROXIMA*/
  SELECT @MONTO = MONTO
  FROM $$COMPANIA$$.MONEDA_HIST AS A
  WHERE MONEDA = @MONEDA
    AND FECHA = (SELECT MAX(FECHA)
                 FROM $$COMPANIA$$.MONEDA_HIST AS B 
                 WHERE A.MONEDA = B.MONEDA
                   AND B.FECHA <= ISNULL(@FECHA, ERPADMIN.SF_GETDATE()))

  /* SI EL MONTO ES NULO COLOCAR UN 1    */
  RETURN ISNULL(@MONTO,1)
end;




REMARK 
\
 ------------------------------------------------------------------
 Crea funcion para obtener moneda de los documentos de los auxiliares
 ------------------------------------------------------------------
/

create function $$COMPANIA$$.DevolverMonedaDocumento(@asiento varchar(10))
returns varchar(10)
begin
declare @moneda varchar(10)

select @moneda = MONEDA
from  $$COMPANIA$$.DOCUMENTOS_CP 
where ASIENTO = @asiento 

if @moneda is null
	select @moneda = MONEDA
	from  $$COMPANIA$$.DOCUMENTOS_CC 
	where ASIENTO = @asiento 
	
if @moneda is null
	select @moneda = cb.MONEDA
	from  $$COMPANIA$$.MOV_BANCOS mb inner join $$COMPANIA$$.CUENTA_BANCARIA cb
	on mb.CUENTA_BANCO = cb.CUENTA_BANCO
	where mb.ASIENTO = @asiento 
	
if @moneda is null
	select @moneda = ch.MONEDA
	from  $$COMPANIA$$.PROCESOCH pch inner join $$COMPANIA$$.CAJA_CHICA ch
	on pch.CAJA_CHICA = ch.CAJA_CHICA
	where pch.ASIENTO = @asiento 

if @moneda is null
	select @moneda = case f.MONEDA 
					when 'L' then g.MONEDA_LOCAL
					else g.MONEDA_DOLAR end
	from  $$COMPANIA$$.FACTURA f, $$COMPANIA$$.GLOBALES_AS g
	where f.ASIENTO_DOCUMENTO = @asiento 

if @moneda is null
	select @moneda = g.MONEDA_LOCAL
	from  $$COMPANIA$$.GLOBALES_AS g


return @moneda	
end;





REMARK 
\
 ------------------------------------------------------------------
 Crea Vista para los documentos de los auxiliares
 ------------------------------------------------------------------
/

CREATE VIEW $$COMPANIA$$.V_ContaElectronicaDocumentos
AS

/* CHEQUES DE DOCUMENTOS CP DEL MAYOR*/
SELECT      M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO DOCUMENTO_CP, EF.COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, DCP.PROVEEDOR BENEFICIARIO, DCP.CHEQUE_CUENTA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, PR.NOMBRE, PR.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, M.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, PR.CONTRIBUYENTE NIT_EMISOR, DCP.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, 
            '' BANCO_DEST, 'M' MAYOR, 'CHEQUE' CATEGORIA, PR.LOCAL CLT_PROV_ORIGEN, 'CHEQUES DE DOCUMENTOS CP DEL MAYOR' ORIGEN_VISTA, 'CP' MODULO, 
            PR.PROVEEDOR PROVEEDOR, PR.CATEGORIA_PROVEED CATEGORIA_PROV, PR.CONTRIBUYENTE NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CP AS DCP ON DCP.ASIENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.PROVEEDOR AS PR ON PR.PROVEEDOR = DCP.PROVEEDOR  INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CUENTA_BANCO = DCP.CHEQUE_CUENTA INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA
            
WHERE DCP.TIPO = 'CHQ'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CP')

UNION ALL

/* CHEQUES DE DOCUMENTOS CP DEL DIARIO*/
SELECT      M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO, EF.COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, DCP.PROVEEDOR BENEFICIARIO, DCP.CHEQUE_CUENTA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, PR.NOMBRE, PR.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, AM.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, PR.CONTRIBUYENTE NIT_EMISOR, DCP.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, 
            '' BANCO_DEST, 'D' MAYOR, 'CHEQUE' CATEGORIA, PR.LOCAL CLT_PROV_ORIGEN, 'CHEQUES DE DOCUMENTOS CP DEL DIARIO' ORIGEN_VISTA, 'CP' MODULO, 
            PR.PROVEEDOR PROVEEDOR, PR.CATEGORIA_PROVEED CATEGORIA_PROV, PR.CONTRIBUYENTE NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CP AS DCP ON DCP.ASIENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.PROVEEDOR AS PR ON PR.PROVEEDOR = DCP.PROVEEDOR  INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CUENTA_BANCO = DCP.CHEQUE_CUENTA INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA
            
WHERE DCP.TIPO = 'CHQ'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CP')

UNION ALL

/* CHEQUES DE DOCUMENTOS CB DEL MAYOR*/
SELECT		M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            CAST(MB.NUMERO AS VARCHAR(50)), '' COD_ELECTRONICO, '' DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, MB.FECHA, 
            MB.MONTO, MB.PAGADERO_A, MB.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, MB.TIPO_DOCUMENTO,
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, M.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, '' NIT_EMISOR, CB.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'CHEQUE' CATEGORIA, '' CLT_PROV_ORIGEN, 'CHEQUES DE DOCUMENTOS CB DEL MAYOR' ORIGEN_VISTA, 'CB' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA

WHERE		MB.ORIGEN = 'CB'
AND         MB.TIPO_DOCUMENTO = 'CHQ'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = MB.ASIENTO AND AM.ORIGEN = 'CB')

UNION ALL

/* CHEQUES DE DOCUMENTOS CB DEL DIARIO*/
SELECT		M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            CAST(MB.NUMERO AS VARCHAR(50)), '' COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, MB.FECHA, 
            MB.MONTO, MB.PAGADERO_A, MB.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, MB.TIPO_DOCUMENTO,
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, AM.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, '' NIT_EMISOR, CB.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, '' BANCO_DEST, 'D' MAYOR, 
            'CHEQUE' CATEGORIA, '' CLT_PROV_ORIGEN, 'CHEQUES DE DOCUMENTOS CB DEL DIARIO' ORIGEN_VISTA, 'CB' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA

WHERE		MB.ORIGEN = 'CB'
AND         MB.TIPO_DOCUMENTO = 'CHQ'
AND         0 = (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = MB.ASIENTO AND AM.ORIGEN = 'CB')

UNION ALL

/* TEF INTERNAS DE DOCUMENTOS CB DEL MAYOR*/
SELECT		M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            CAST(DT.NUMERO_ORIGEN AS VARCHAR(50)), EF.COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, T.FECHA_APLICACION, 
            DT.MONTO_ORIGEN, DT.BENEFICIARIO, DT.CONTRIBUYENTE, DT.CUENTA_DESTINO, EFD.COD_ELECTRONICO, 'TEF', 
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, M.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, '' NIT_EMISOR, CBD.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, EFD.ENTIDAD_FINANCIERA BANCO_DEST, 
            'M' MAYOR, 'TRANSFERENCIA' CATEGORIA, '' CLT_PROV_ORIGEN, 'TEF INTERNAS DE DOCUMENTOS CB DEL MAYOR' ORIGEN_VISTA, 'CB' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TRANSFERENCIA_CB AS T ON CB.CUENTA_BANCO = T.CUENTA_ORIGEN  AND T.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.DET_TRANS_CB AS DT ON DT.NUMERO_ORIGEN = T.NUMERO_ORIGEN AND DT.CUENTA_ORIGEN = T.CUENTA_ORIGEN INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA LEFT JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CBD ON CBD.CUENTA_BANCO = DT.CUENTA_DESTINO INNER JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EFD ON CBD.ENTIDAD_FINANCIERA = EFD.ENTIDAD_FINANCIERA

WHERE       T.TIPO_ORIGEN = 'T/D'
AND			DT.TIPO_MOV = 'I'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = T.ASIENTO AND AM.ORIGEN = 'CB')

UNION ALL

/* TEF TERCEROS DE DOCUMENTOS CB DEL MAYOR*/
SELECT		M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            '' DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, T.FECHA_APLICACION, 
            0 MONTO_ORIGEN, '' BENEFICIARIO, '' CONTRIBUYENTE, '' CUENTA_DESTINO, '', 'TEF' TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, M.FECHA) TIPO_CAMBIO, '' FOLIO_SAT, 
            '' NIT_EMISOR, '' MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'TRANSFERENCIA' CATEGORIA, '' CLT_PROV_ORIGEN, 'TEF TERCEROS DE DOCUMENTOS CB DEL MAYOR' ORIGEN_VISTA, 'CB' MODULO,
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR 
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TRANSFERENCIA_CB AS T ON CB.CUENTA_BANCO = T.CUENTA_ORIGEN  AND T.ASIENTO = M.ASIENTO LEFT JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM 
WHERE 	    AM.ASIENTO = T.ASIENTO AND (AM.ORIGEN = 'CB' OR AM.ORIGEN = 'CP'))
AND	    T.TIPO_ORIGEN = 'T/D'
AND	    0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.DET_TRANS_CB AS DT 
            WHERE DT.NUMERO_ORIGEN = T.NUMERO_ORIGEN AND DT.CUENTA_ORIGEN = T.CUENTA_ORIGEN AND DT.TIPO_ORIGEN = T.TIPO_ORIGEN  
AND	    DT.TIPO_MOV = 'T')

UNION ALL

/* TEF INTERNAS DE DOCUMENTOS CB DEL DIARIO*/
SELECT		M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            CAST(DT.NUMERO_ORIGEN AS VARCHAR(50)), EF.COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, T.FECHA_APLICACION, 
            DT.MONTO_ORIGEN, DT.BENEFICIARIO, DT.CONTRIBUYENTE, DT.CUENTA_DESTINO, EFD.COD_ELECTRONICO, 'TEF', 
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, AM.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, '' NIT_EMISOR, CBD.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, EFD.ENTIDAD_FINANCIERA BANCO_DEST, 
            'D' MAYOR, 'TRANSFERENCIA' CATEGORIA, '' CLT_PROV_ORIGEN, 'TEF INTERNAS DE DOCUMENTOS CB DEL DIARIO' ORIGEN_VISTA, 'CB' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TRANSFERENCIA_CB AS T ON CB.CUENTA_BANCO = T.CUENTA_ORIGEN  AND T.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.DET_TRANS_CB AS DT ON DT.NUMERO_ORIGEN = T.NUMERO_ORIGEN AND DT.CUENTA_ORIGEN = T.CUENTA_ORIGEN INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA LEFT JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CBD ON CBD.CUENTA_BANCO = DT.CUENTA_DESTINO INNER JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EFD ON CBD.ENTIDAD_FINANCIERA = EFD.ENTIDAD_FINANCIERA

WHERE       T.TIPO_ORIGEN = 'T/D'
AND			DT.TIPO_MOV = 'I'
AND         0 = (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = T.ASIENTO AND AM.ORIGEN = 'CB')

UNION ALL

/* TEF TERCEROS DE DOCUMENTOS CB DEL DIARIO*/
SELECT		M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            CAST(DT.NUMERO_ORIGEN AS VARCHAR(50)), EF.COD_ELECTRONICO, EF.DESCRIPCION DESCRIPCION_EF, MB.PAGADERO_A BENEFICIARIO, MB.CUENTA_BANCO, T.FECHA_APLICACION, 
            DT.MONTO_ORIGEN, DT.BENEFICIARIO, DT.CONTRIBUYENTE, DT.CUENTA_DESTINO, '', 'TEF', 
            $$COMPANIA$$.ObtenerTipoCambio( CB.MONEDA, M.FECHA) TIPO_CAMBIO, 
            '' FOLIO_SAT, '' NIT_EMISOR, DT.MONEDA, EF.ENTIDAD_FINANCIERA BANCO_ORI, DT.ENTIDAD_FINANCIERA BANCO_DEST, 'D' MAYOR, 
            'TRANSFERENCIA' CATEGORIA, '' CLT_PROV_ORIGEN, 'TEF TERCEROS DE DOCUMENTOS CB DEL DIARIO' ORIGEN_VISTA, 'CB' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TRANSFERENCIA_CB AS T ON CB.CUENTA_BANCO = T.CUENTA_ORIGEN  AND T.ASIENTO = M.ASIENTO LEFT JOIN
            $$COMPANIA$$.DET_TRANS_CB AS DT ON DT.NUMERO_ORIGEN = T.NUMERO_ORIGEN AND DT.CUENTA_ORIGEN = T.CUENTA_ORIGEN INNER JOIN
            $$COMPANIA$$.MOV_BANCOS AS MB ON MB.ASIENTO = M.ASIENTO AND CB.CUENTA_BANCO = MB.CUENTA_BANCO INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA
WHERE       T.TIPO_ORIGEN = 'T/D'
AND			DT.TIPO_MOV = 'T'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = T.ASIENTO AND (AM.ORIGEN = 'CB' OR AM.ORIGEN = 'CP'))

UNION ALL

/* CREDITOS DE CC DEL MAYOR */
SELECT	    M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, C.NOMBRE BENEFICIARIO, DCP.CTA_BANCARIA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, C.NOMBRE, C.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, M.FECHA) TIPO_CAMBIO, 
            DCP.DOCUMENTO_FISCAL FOLIO_SAT, C.CONTRIBUYENTE NIT_EMISOR, DCP.MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'CREDITOS CC' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'CREDITOS DE CC DEL MAYOR' ORIGEN_VISTA, 'CC' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM	    $$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CC AS DCP ON DCP.ASIENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = DCP.CLIENTE

WHERE       DCP.TIPO IN ('REC','DEP')
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CC')

UNION ALL

/* TRANSFERENCIAS DE CC DEL MAYOR */
SELECT	    M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCC.DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, CON.NOMBRE BENEFICIARIO, 'NA' CHEQUE_CUENTA, DCC.FECHA, 
            DCC.MONTO, C.NOMBRE, C.CONTRIBUYENTE, DCC.CTA_BANCARIA CUENTA_DESTINO, '' DCC, DCC.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCC.MONEDA, M.FECHA) TIPO_CAMBIO, 
            DCC.DOCUMENTO_FISCAL FOLIO_SAT, C.CONTRIBUYENTE NIT_EMISOR, DCC.MONEDA, DCC.ENTIDAD_FINANCIERA BANCO_ORI, EF.ENTIDAD_FINANCIERA BANCO_DEST, 'M' MAYOR, 
            'CREDITOS CC' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'CREDITOS DE CC DEL MAYOR' ORIGEN_VISTA, 'CC' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
        
FROM	    $$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CC AS DCC ON DCC.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_BANCARIA AS CB ON CB.CTA_CONTABLE = CC.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.ENTIDAD_FINANCIERA AS EF ON CB.ENTIDAD_FINANCIERA = EF.ENTIDAD_FINANCIERA INNER JOIN
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = DCC.CLIENTE,
            ERPADMIN.CONJUNTO AS CON
            
WHERE       DCC.TIPO = 'TEF'
AND			CON.CONJUNTO = '$$COMPANIA$$'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCC.ASIENTO AND AM.ORIGEN = 'CC')

UNION ALL

/* DOCUMENTOS ELECTRONICOS DE CP MAYOR*/
SELECT  M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO,'' COD_ELECTRONICO, '' DESCRIPCION_EF, DCP.PROVEEDOR BENEFICIARIO, DCP.CHEQUE_CUENTA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, PR.NOMBRE, PR.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, M.FECHA) TIPO_CAMBIO, 
            DCP.DOCUMENTO_FISCAL FOLIO_SAT, CON.NIT NIT_EMISOR, DCP.MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'COMPROBANTE' CATEGORIA, PR.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE CP MAYOR' ORIGEN_VISTA, 'CP' MODULO, 
            PR.PROVEEDOR PROVEEDOR, PR.CATEGORIA_PROVEED CATEGORIA_PROV, PR.CONTRIBUYENTE NIT_PROVEEDOR
            
FROM	    $$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CP AS DCP ON DCP.ASIENTO = M.ASIENTO AND DCP.DOCUMENTO_FISCAL IS NOT NULL INNER JOIN 
            $$COMPANIA$$.PROVEEDOR AS PR ON PR.PROVEEDOR = DCP.PROVEEDOR,
            ERPADMIN.CONJUNTO AS CON


WHERE       DCP.TIPO IN ('FAC','N/C','N/D','TEF')
AND			CON.CONJUNTO = '$$COMPANIA$$'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CP')

UNION ALL

/* DOCUMENTOS ELECTRONICOS DE CP DIARIO */
			SELECT  M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, DCP.PROVEEDOR BENEFICIARIO, DCP.CHEQUE_CUENTA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, PR.NOMBRE, PR.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, AM.FECHA) TIPO_CAMBIO, 
            DCP.DOCUMENTO_FISCAL FOLIO_SAT, CON.NIT NIT_EMISOR, DCP.MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'D' MAYOR, 
            'COMPROBANTE' CATEGORIA, PR.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE CP DIARIO' ORIGEN_VISTA, 'CP' MODULO, 
            PR.PROVEEDOR PROVEEDOR, PR.CATEGORIA_PROVEED CATEGORIA_PROV, PR.CONTRIBUYENTE NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CP AS DCP ON DCP.ASIENTO = M.ASIENTO AND DCP.DOCUMENTO_FISCAL IS NOT NULL INNER JOIN 
            $$COMPANIA$$.PROVEEDOR AS PR ON PR.PROVEEDOR = DCP.PROVEEDOR,
            ERPADMIN.CONJUNTO AS CON
            

WHERE       DCP.TIPO IN ('FAC','N/C','N/D','TEF')
AND			CON.CONJUNTO = '$$COMPANIA$$'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CP')

UNION ALL
            
/* DOCUMENTOS ELECTRONICOS DE CC MAYOR */
SELECT		M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, '' BENEFICIARIO, DCP.CTA_BANCARIA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, C.NOMBRE, C.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, M.FECHA) TIPO_CAMBIO, 
            DCP.DOCUMENTO_FISCAL FOLIO_SAT, DEP.NIT_EMISOR, DCP.MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'COMPROBANTE' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE CC MAYOR' ORIGEN_VISTA, 'CC' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CC AS DCP ON DCP.ASIENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = DCP.CLIENTE    INNER JOIN
            $$COMPANIA$$.DOC_ELECTRONICO_PROCESADO AS DEP ON (CASE DCP.TIPO WHEN 'FAC' THEN 'F' WHEN 'N/C' THEN 'D' WHEN 'N/D' THEN 'ND' END) = DEP.TIPO_DOC 
			AND DCP.DOCUMENTO_FISCAL IS NOT NULL AND DCP.DOCUMENTO = DEP.NUMERO_DOC

WHERE       DCP.TIPO IN ('FAC','N/C','N/D')
AND         DCP.CARGADO_DE_FACT = 'N'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CC')

UNION ALL
/* DOCUMENTOS ELECTRONICOS DE CC DIARIO */
			SELECT  M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            DCP.DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, '' BENEFICIARIO, DCP.CTA_BANCARIA, DCP.FECHA_DOCUMENTO, 
            DCP.MONTO, C.NOMBRE, C.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, DCP.TIPO, 
            $$COMPANIA$$.ObtenerTipoCambio( DCP.MONEDA, AM.FECHA) TIPO_CAMBIO, 
            DCP.DOCUMENTO_FISCAL FOLIO_SAT, DEP.NIT_EMISOR, DCP.MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'D' MAYOR, 
            'COMPROBANTE' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE FA DIARIO' ORIGEN_VISTA, 'CC' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.DOCUMENTOS_CC AS DCP ON DCP.ASIENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = DCP.CLIENTE    INNER JOIN
            $$COMPANIA$$.DOC_ELECTRONICO_PROCESADO AS DEP ON (CASE DCP.TIPO WHEN 'FAC' THEN 'F' WHEN 'N/C' THEN 'D' WHEN 'N/D' THEN 'ND' END) = DEP.TIPO_DOC AND DCP.DOCUMENTO = DEP.NUMERO_DOC

WHERE       DCP.TIPO IN ('FAC','N/C','N/D')
AND         DCP.CARGADO_DE_FACT = 'N'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = DCP.ASIENTO AND AM.ORIGEN = 'CC')

UNION ALL

/* DOCUMENTOS ELECTRONICOS DE FA MAYOR */
			SELECT  M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            F.FACTURA, '' COD_ELECTRONICO, '' DESCRIPCION_EF, '' BENEFICIARIO, '' CUENTA_BANCARIA, F.FECHA, 
            F.TOTAL_FACTURA, C.NOMBRE, C.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, 'FAC', 
            $$COMPANIA$$.ObtenerTipoCambio( CASE F.MONEDA 
            WHEN 'L' THEN GASM.MONEDA_LOCAL
            ELSE GASM.MONEDA_DOLAR END, M.FECHA) TIPO_CAMBIO, 
            F.DOC_FISCAL, DEP.NIT_EMISOR, CASE F.MONEDA 
            WHEN 'L' THEN GASM.MONEDA_LOCAL
            ELSE GASM.MONEDA_DOLAR END, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
            'COMPROBANTE' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE FA MAYOR' ORIGEN_VISTA, 'FA' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.MAYOR AS M INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = M.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.FACTURA AS F ON F.ASIENTO_DOCUMENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = F.CLIENTE INNER JOIN
            $$COMPANIA$$.DOC_ELECTRONICO_PROCESADO AS DEP ON F.TIPO_DOCUMENTO = DEP.TIPO_DOC AND F.FACTURA = DEP.NUMERO_DOC,
			$$COMPANIA$$.GLOBALES_AS AS GASM 

WHERE       F.TIPO_DOCUMENTO = 'F'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = F.ASIENTO_DOCUMENTO AND AM.ORIGEN = 'FA')

UNION ALL
/* DOCUMENTOS ELECTRONICOS DE FA DIARIO */
			SELECT  M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
            ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL,TA.TIPO_ASIENTO,
            F.FACTURA, '' COD_ELECTRONICO, '' DESCRIPCION_EF, '' BENEFICIARIO, '' CUENTA_BANCARIA, F.FECHA, 
            F.TOTAL_FACTURA, C.NOMBRE, C.CONTRIBUYENTE, '' CUENTA_DESTINO, '' DOC, 'FAC', 
            $$COMPANIA$$.ObtenerTipoCambio( CASE F.MONEDA 
            WHEN 'L' THEN GASM.MONEDA_LOCAL
            ELSE GASM.MONEDA_DOLAR END, AM.FECHA) TIPO_CAMBIO, 
            F.DOC_FISCAL, DEP.NIT_EMISOR, 
            CASE F.MONEDA 
            WHEN 'L' THEN GASM.MONEDA_LOCAL
            ELSE GASM.MONEDA_DOLAR END, '' BANCO_ORI, '' BANCO_DEST, 'D' MAYOR, 
            'COMPROBANTE' CATEGORIA, C.LOCAL CLT_PROV_ORIGEN, 'DOCUMENTOS ELECTRONICOS DE FA DIARIO' ORIGEN_VISTA, 'FA' MODULO, 
            '' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM		$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            $$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            $$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            $$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO INNER JOIN
            $$COMPANIA$$.FACTURA AS F ON F.ASIENTO_DOCUMENTO = M.ASIENTO INNER JOIN 
            $$COMPANIA$$.CLIENTE AS C ON C.CLIENTE = F.CLIENTE      INNER JOIN
            $$COMPANIA$$.DOC_ELECTRONICO_PROCESADO AS DEP ON F.TIPO_DOCUMENTO = DEP.TIPO_DOC AND F.FACTURA = DEP.NUMERO_DOC,
			$$COMPANIA$$.GLOBALES_AS AS GASM  

WHERE       F.TIPO_DOCUMENTO = 'F'
AND         0 <> (SELECT COUNT (0) FROM $$COMPANIA$$.ASIENTO_MAYORIZADO AS AM WHERE AM.ASIENTO = F.ASIENTO_DOCUMENTO AND AM.ORIGEN = 'FA')
;





CREATE PROCEDURE $$COMPANIA$$.GETMONTOS
(@FECHA AS DATETIME,
 @FECHAFINAL AS DATETIME,
 @SWHERE AS NVARCHAR(MAX),
 @SWHEREFASE AS NVARCHAR(MAX), 
 @TIPOCONTABILIDAD AS VARCHAR(1), 
 @ANTESCIERRE AS VARCHAR(1),
 @MONEDA AS VARCHAR(1), 
 @OPCION AS INT,
 @MOVIMIENTO AS VARCHAR(1))
 AS
 BEGIN
   DECLARE   @MONTOINICIAL AS DECIMAL(28,8),
      @SALDOINICIAL AS DECIMAL(28,8),
     @CUENTACONTABLE as NVARCHAR(50),
     @CENTROCOSTO as NVARCHAR(50),
     @NIT as NVARCHAR(50),
     @FECHAINI as DATETIME,
     @FECHAFIN as DATETIME
   
   DECLARE   @SQL AS NVARCHAR(MAX),  
      @SELECT AS NVARCHAR(MAX),
      @FROM AS NVARCHAR(MAX),
     @WHERERESTO AS VARCHAR (MAX),
      @SELECTMOV AS NVARCHAR(MAX),
      @FROMMOV AS NVARCHAR(MAX),
     @WHERERESTOMOV AS VARCHAR (MAX),
     @ANO_MES AS VARCHAR (MAX),
     @FECHAINICIAL DATETIME,
     @FECHAMIN DATETIME,
     @COLUMNASALDO AS VARCHAR(100),
     @COLUMNADEBITO AS VARCHAR(100),
     @COLUMNACREDITO AS VARCHAR(100),
	 @MOVIMIENTOS AS VARCHAR(50)
 
  SELECT @FECHAMIN = MIN(FECHA_FINAL) FROM $$COMPANIA$$.PERIODO_CONTABLE
  
  SELECT @FECHAINICIAL = ISNULL(MAX(FECHA_FINAL), @FECHAMIN)
  FROM $$COMPANIA$$.PERIODO_CONTABLE 
  WHERE FECHA_FINAL < @FECHA
  
  IF @MONEDA = 'L'
   BEGIN
    SET @COLUMNACREDITO = 'ISNULL(CREDITO_LOCAL,0)'
    SET @COLUMNADEBITO = 'ISNULL(DEBITO_LOCAL,0)'        
    IF @TIPOCONTABILIDAD = 'F' 
     SET @COLUMNASALDO = 'ISNULL(SALDO_FISC_LOCAL,0)'       
    ELSE IF @TIPOCONTABILIDAD = 'C' 
     SET @COLUMNASALDO = 'ISNULL(SALDO_CORP_LOCAL,0)'
    ELSE 
     SET @COLUMNASALDO = 'ISNULL(SALDO_FISC_LOCAL,0)'
   END
  ELSE IF @MONEDA = 'D' 
   BEGIN   
    SET @COLUMNACREDITO = 'ISNULL(CREDITO_DOLAR,0)'
    SET @COLUMNADEBITO = 'ISNULL(DEBITO_DOLAR,0)'
    IF @TIPOCONTABILIDAD = 'F' 
     SET @COLUMNASALDO = 'ISNULL(SALDO_FISC_DOLAR,0)'
    ELSE IF @TIPOCONTABILIDAD = 'C' 
     SET @COLUMNASALDO = 'ISNULL(SALDO_CORP_DOLAR,0)'
    ELSE 
     SET @COLUMNASALDO = 'ISNULL(SALDO_FISC_DOLAR,0)'
   END
  ELSE 
   BEGIN
    SET @COLUMNASALDO = 'ISNULL(SALDO_FISC_LOCAL,0)'
    SET @COLUMNACREDITO = 'ISNULL(CREDITO_LOCAL,0)'
    SET @COLUMNADEBITO = 'ISNULL(DEBITO_LOCAL,0)'  
   END
  
  IF @MOVIMIENTO = 'M'
  BEGIN
  SET @MOVIMIENTOS = 'MAYOR M '
    SET @WHERERESTOMOV = ' AND (CONTABILIDAD =''' + @TIPOCONTABILIDAD + ''' OR CONTABILIDAD = ''A'')'
  
  IF @ANTESCIERRE = 'S' 
   SET @WHERERESTOMOV = @WHERERESTOMOV + '
   AND (ASIENTO NOT IN ( SELECT ASIENTO 
     FROM $$COMPANIA$$.HIST_CIERRE_CG 
     WHERE FECHA_CIERRE >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA_CIERRE <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''')) '
	 END
ELSE
BEGIN
  SET @MOVIMIENTOS = 'DIARIO D '

  SET @WHERERESTOMOV = ' AND (AD.CONTABILIDAD =''' + @TIPOCONTABILIDAD + ''' OR AD.CONTABILIDAD = ''A'')'
  
  IF @ANTESCIERRE = 'S' 
   SET @WHERERESTOMOV = @WHERERESTOMOV + '
   AND (AD.ASIENTO NOT IN ( SELECT ASIENTO 
     FROM $$COMPANIA$$.HIST_CIERRE_CG 
     WHERE FECHA_CIERRE >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA_CIERRE <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''')) '
 END

  SET @SQL = '   DECLARE 
      @MONTOINICIAL AS DECIMAL(28,8),
      @SALDOINICIAL AS DECIMAL(28,8)                
                 '

 
  /*SALDO*/
  IF @OPCION = 1
  BEGIN
   SET @SELECT = 'SELECT @SALDOINICIAL = SUM( ' + @COLUMNASALDO + ' )'
   SET @FROM = ' FROM $$COMPANIA$$.SALDO S INNER JOIN
     (SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) FECHA
      FROM $$COMPANIA$$.SALDO
      WHERE FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' '
   SET @WHERERESTO =  ' GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2 
     ON S.CENTRO_COSTO = S2.CENTRO_COSTO
     AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
     AND S.FECHA = S2.FECHA'  
   
   SET @SELECTMOV = ' SELECT @MONTOINICIAL = SUM( '+ @COLUMNADEBITO + ' -  ' + @COLUMNACREDITO + ') '
                     
   
   SET @FROMMOV = 'FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA > ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''') '
           
    SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO + @SELECTMOV + @FROMMOV + @SWHERE + @WHERERESTOMOV
  END
  /*DEBITO*/
  ELSE IF @OPCION = 2 OR @OPCION = 6
  BEGIN
   SET @SELECT = ' SELECT @MONTOINICIAL = SUM(' + @COLUMNADEBITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '
 
   SET @WHERERESTO = @WHERERESTOMOV
          
   SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO
  END
  /*CREDITO*/
  ELSE IF @OPCION = 3 OR @OPCION = 7
  BEGIN
   SET @SELECT = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNACREDITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '
 
   SET @WHERERESTO = @WHERERESTOMOV
          
   SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO
  END
  /*MOVIMIENTO*/
  ELSE IF @OPCION = 4 OR @OPCION = 8
  BEGIN
  IF @MOVIMIENTO = 'M'
  BEGIN
   SET @SELECT = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNADEBITO + ' - ' + @COLUMNACREDITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.' + @MOVIMIENTOS + '
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '

   SET @WHERERESTO = @WHERERESTOMOV     
   SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO	
END  

 IF @MOVIMIENTO = 'D'
 BEGIN
 SET @SELECT  = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNADEBITO + ' - ' + @COLUMNACREDITO + ')'
    SET @FROM = ' FROM $$COMPANIA$$.' + @MOVIMIENTOS + ' INNER JOIN $$COMPANIA$$.ASIENTO_DE_DIARIO AD ON D.ASIENTO = AD.ASIENTO
     WHERE (AD.FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND AD.FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '

   SET @WHERERESTO = @WHERERESTOMOV     
   SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO
END
  END
  /*SALDO NIT*/
  ELSE IF @OPCION = 5
  BEGIN
   SET @SELECT = 'SELECT @SALDOINICIAL = SUM( ' + @COLUMNASALDO + ' )'
   SET @FROM = ' FROM $$COMPANIA$$.SALDO_NIT S INNER JOIN
     (SELECT CENTRO_COSTO, NIT, CUENTA_CONTABLE, MAX(FECHA) FECHA
      FROM $$COMPANIA$$.SALDO_NIT
      WHERE FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' '
   SET @WHERERESTO =  ' GROUP BY CENTRO_COSTO, NIT, CUENTA_CONTABLE) S2 
     ON S.CENTRO_COSTO = S2.CENTRO_COSTO
     AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
     AND S.NIT = S2.NIT
     AND S.FECHA = S2.FECHA'      
   
   SET @SELECTMOV = ' SELECT @MONTOINICIAL = SUM( '+ @COLUMNADEBITO + ' -  ' + @COLUMNACREDITO + ') '
                     
   
   SET @FROMMOV = 'FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA > ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''') '
           
    SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO + @SELECTMOV + @FROMMOV + @SWHERE + @WHERERESTOMOV
  END
  /*SALDO FASE*/
  ELSE IF @OPCION = 9
  BEGIN
   SET @SELECT = 'SELECT @SALDOINICIAL = SUM( ' + @COLUMNASALDO + ' )'
   SET @FROM = ' FROM $$COMPANIA$$.SALDO S INNER JOIN
     (SELECT CENTRO_COSTO, CUENTA_CONTABLE, MAX(FECHA) FECHA
      FROM $$COMPANIA$$.SALDO
      WHERE FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' '
   SET @WHERERESTO =  ' GROUP BY CENTRO_COSTO, CUENTA_CONTABLE) S2 
     ON S.CENTRO_COSTO = S2.CENTRO_COSTO
     AND S.CUENTA_CONTABLE = S2.CUENTA_CONTABLE
     AND S.FECHA = S2.FECHA'      
   
   SET @SELECTMOV = ' SELECT @MONTOINICIAL = SUM( '+ @COLUMNADEBITO + ' -  ' + @COLUMNACREDITO + ') '
                     
   
   SET @FROMMOV = 'FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA > ''' + CONVERT(NVARCHAR(75),@FECHAINICIAL, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''') '
           
    SET @SQL = @SQL + @SELECT + @FROM + @SWHERE + @WHERERESTO + @SELECTMOV + @FROMMOV + @SWHEREFASE + @WHERERESTOMOV
  END
  /*DEBITO FASE*/
  ELSE IF @OPCION = 10
  BEGIN
   SET @SELECT = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNADEBITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '
 
   SET @WHERERESTO = @WHERERESTOMOV
          
   SET @SQL = @SQL + @SELECT + @FROM + @SWHEREFASE + @WHERERESTO
  END
  /*CREDITO FASE*/
  ELSE IF @OPCION = 11
  BEGIN
   SET @SELECT = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNACREDITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '
 
   SET @WHERERESTO = @WHERERESTOMOV
          
   SET @SQL = @SQL + @SELECT + @FROM + @SWHEREFASE + @WHERERESTO
  END
  /*MOVIMIENTO FASE*/
  ELSE IF @OPCION = 12
  BEGIN
   SET @SELECT = 'SELECT @MONTOINICIAL = SUM(' + @COLUMNADEBITO + ' - ' + @COLUMNACREDITO + ')'
   SET @FROM = ' FROM $$COMPANIA$$.MAYOR M 
     WHERE (FECHA >=''' + CONVERT(NVARCHAR(75),@FECHA, 111) + ''' AND FECHA <= ''' + CONVERT(NVARCHAR(75),@FECHAFINAL, 111) + ''') '
 
   SET @WHERERESTO = @WHERERESTOMOV
          
   SET @SQL = @SQL + @SELECT + @FROM + @SWHEREFASE + @WHERERESTO
  END 
 
  SET @SQL = @SQL + '
   SELECT ISNULL(@MONTOINICIAL,0) + ISNULL(@SALDOINICIAL,0)'
     EXECUTE SP_EXECUTESQL @SQL 
 
 END;



REMARK 
\
 ------------------------------------------------------------------
 Crea Vista para las pólizas contables 
 ------------------------------------------------------------------
/

CREATE VIEW $$COMPANIA$$.V_ContaElectronica
AS

/* ASIENTOS DEL MAYOR*/
SELECT			M.ASIENTO, M.CONSECUTIVO, M.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
			ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL, TA.TIPO_ASIENTO, '' DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF,
			'' BENEFICIARIO, '' CHEQUE_CUENTA, '' FECHA_DOCUMENTO, 0 MONTO, '' NOMBRE, M.NIT CONTRIBUYENTE, '' CUENTA_DESTINO, 
			'' DOC, '' TIPO, 
			$$COMPANIA$$.ObtenerTipoCambio((SELECT MONEDA_LOCAL FROM $$COMPANIA$$.GLOBALES_AS ) , M.FECHA) TIPO_CAMBIO_MONEDA,
			M.U_FOLIOSAT FOLIO_SAT, CON.NIT NIT_EMISOR, 
			'L' MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'M' MAYOR, 
			'TRANSACCION' CATEGORIA, '' CLT_PROV_ORIGEN, 'ASIENTOS DEL MAYOR' ORIGEN_VISTA, 'MAYOR' MODULO, 
			'' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM			$$COMPANIA$$.ASIENTO_MAYORIZADO AM INNER JOIN
			$$COMPANIA$$.MAYOR AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
			$$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
			$$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO,
            		ERPADMIN.CONJUNTO AS CON
            
			/*SOLAMENTE LOS TIPOS QUE NO SEAN LOS QUE SE INCLUYEN ABAJO */
WHERE			0 = (SELECT COUNT (0) 
			FROM $$COMPANIA$$.V_ContaElectronicaDocumentos V WHERE V.CUENTA_CONTABLE = M.CUENTA_CONTABLE
			AND V.ASIENTO = M.ASIENTO) AND CON.CONJUNTO = '$$COMPANIA$$'

UNION ALL

/* ASIENTOS DEL DIARIO*/
SELECT			M.ASIENTO, M.CONSECUTIVO, AM.FECHA, M.REFERENCIA, M.CUENTA_CONTABLE, CC.DESCRIPCION, ISNULL(M.DEBITO_LOCAL, 0) AS DEBITO_LOCAL, 
			ISNULL(M.CREDITO_LOCAL, 0) AS CREDITO_LOCAL, TA.TIPO_ASIENTO, '' DOCUMENTO, '' COD_ELECTRONICO, '' DESCRIPCION_EF, 
			'' BENEFICIARIO, '' CHEQUE_CUENTA, '' FECHA_DOCUMENTO, 0 MONTO, '' NOMBRE, '' CONTRIBUYENTE, '' CUENTA_DESTINO, 
			'' DOC, '' TIPO, 
			$$COMPANIA$$.ObtenerTipoCambio((SELECT MONEDA_LOCAL FROM $$COMPANIA$$.GLOBALES_AS ) , AM.FECHA) TIPO_CAMBIO_MONEDA,
            		M.U_FOLIOSAT FOLIO_SAT, CON.NIT NIT_EMISOR, 
			'L' MONEDA, '' BANCO_ORI, '' BANCO_DEST, 'D' MAYOR, 
			'TRANSACCION' CATEGORIA, '' CLT_PROV_ORIGEN, 'ASIENTOS DEL DIARIO' ORIGEN_VISTA, 'DIARIO' MODULO, 
			'' PROVEEDOR, '' CATEGORIA_PROV, '' NIT_PROVEEDOR
            
FROM			$$COMPANIA$$.ASIENTO_DE_DIARIO AM INNER JOIN
            		$$COMPANIA$$.DIARIO AS M ON AM.ASIENTO = M.ASIENTO INNER JOIN
            		$$COMPANIA$$.CUENTA_CONTABLE AS CC ON CC.CUENTA_CONTABLE = M.CUENTA_CONTABLE INNER JOIN
            		$$COMPANIA$$.TIPO_ASIENTO AS TA ON TA.TIPO_ASIENTO = AM.TIPO_ASIENTO,
            		ERPADMIN.CONJUNTO AS CON
            
            		/*SOLAMENTE LOS TIPOS QUE NO SEAN LOS QUE SE INCLUYEN ABAJO */
WHERE			0 = (SELECT COUNT (0) FROM $$COMPANIA$$.V_ContaElectronicaDocumentos V
			WHERE V.CUENTA_CONTABLE = M.CUENTA_CONTABLE AND V.ASIENTO = M.ASIENTO)
			AND CON.CONJUNTO = '$$COMPANIA$$'

UNION ALL

SELECT * FROM $$COMPANIA$$.V_ContaElectronicaDocumentos;

