DROP TRIGGER TI_Asigna_Transac_ID;

DROP TRIGGER ERPADMIN.TI_Asigna_Transac_ID;


CREATE TRIGGER ERPADMIN.TI_Asigna_Transac_ID ON ERPADMIN.SOLICITUD_SERVICIO 
FOR INSERT 
AS
BEGIN
  DECLARE @id_transaccion varchar(250)
    
  exec sp_getbindtoken @id_transaccion output
    
  UPDATE ERPADMIN.SOLICITUD_SERVICIO 
  SET    ID_TRANSACCION = @id_transaccion
  FROM   inserted i, ERPADMIN.SOLICITUD_SERVICIO s
  WHERE  i.ROWPOINTER = s.ROWPOINTER
  AND    i.ID_TRANSACCION is null

  IF (@@ERROR <> 0) 
  BEGIN
    RAISERROR( 'Error actualizando la tabla solicitud_servicio.',16,1 )
  END
END;

DROP TRIGGER TU_WSQM_SITIO_ESTADO;

DROP TRIGGER ERPADMIN.TU_WSQM_SITIO_ESTADO;

CREATE TRIGGER ERPADMIN.TU_WSQM_SITIO_ESTADO ON ERPADMIN.SITIO
FOR UPDATE 
AS
BEGIN
	-- si se actualiza el estado y cambia el valor del mismo
	-- es probable que haya que actualizar estado_global de suscripcion para los sitios correspondientes
  IF UPDATE(ESTADO) 
		AND 0 < (		SELECT COUNT('X') 
								FROM INSERTED I, DELETED D
								WHERE I.SITIO = D.SITIO
						    AND I.ESTADO != D.ESTADO
						)
	BEGIN
		UPDATE ERPADMIN.SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I, DELETED D
		WHERE S.SITIO = I.SITIO
		AND (   
						( U.PUBLICADOR = S.SITIO AND U.SUSCRIPTOR = S2.SITIO ) 
				 OR 
						( U.PUBLICADOR = S2.SITIO AND U.SUSCRIPTOR = S.SITIO )
				)
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = P.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   I.SITIO = D.SITIO
 		AND   I.ESTADO != D.ESTADO
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO WHEN 'AAAAA' THEN 'A' ELSE 'I' END
	END
END;

DROP TRIGGER TU_WSQM_SUBSERVICIO_ESTADO;

DROP TRIGGER ERPADMIN.TU_WSQM_SUBSERVICIO_ESTADO;

CREATE TRIGGER ERPADMIN.TU_WSQM_SUBSERVICIO_ESTADO ON ERPADMIN.SUBSERVICIO
FOR UPDATE 
AS
BEGIN
	-- si se actualiza el estado y cambia el valor del mismo
	-- es probable que haya que actualizar estado_global de suscripcion para los sitios correspondientes
  IF UPDATE(ESTADO) 
		AND 0 < (		SELECT COUNT('X') 
								FROM INSERTED I, DELETED D
								WHERE I.SERVICIO = D.SERVICIO
								AND   I.SUBSERVICIO = D.SUBSERVICIO
						    AND 	I.ESTADO != D.ESTADO
						)
	BEGIN
		UPDATE SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I, DELETED D
		WHERE E.SERVICIO = I.SERVICIO
		AND   E.SUBSERVICIO = I.SUBSERVICIO
		AND   U.PUBLICADOR = S.SITIO 
		AND   U.SUSCRIPTOR = S2.SITIO
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = P.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   I.SERVICIO = D.SERVICIO
		AND   I.SUBSERVICIO = D.SUBSERVICIO
  		AND   I.ESTADO != D.ESTADO
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO WHEN 'AAAAA' THEN 'A' ELSE 'I' END
	END
END;

DROP TRIGGER TU_WSQM_PUBLICACION_ESTADO;

DROP TRIGGER ERPADMIN.TU_WSQM_PUBLICACION_ESTADO;

CREATE TRIGGER ERPADMIN.TU_WSQM_PUBLICACION_ESTADO ON ERPADMIN.PUBLICACION
FOR UPDATE 
AS
BEGIN
	-- si se actualiza el estado y cambia el valor del mismo
	-- es probable que haya que actualizar estado_global de suscripcion para los sitios correspondientes
  IF UPDATE(ESTADO) 
		AND 0 < (		SELECT COUNT('X') 
								FROM INSERTED I, DELETED D
								WHERE I.PUBLICADOR = D.PUBLICADOR
								AND   I.SERVICIO = D.SERVICIO
								AND   I.SUBSERVICIO = D.SUBSERVICIO
						    AND 	I.ESTADO != D.ESTADO
						)
	BEGIN
		UPDATE SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I, DELETED D
		WHERE P.PUBLICADOR = I.PUBLICADOR
		AND   P.SERVICIO = I.SERVICIO
		AND   P.SUBSERVICIO = I.SUBSERVICIO
		AND   U.PUBLICADOR = S.SITIO 
		AND   U.SUSCRIPTOR = S2.SITIO
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = P.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   I.PUBLICADOR = D.PUBLICADOR
		AND   I.SERVICIO = D.SERVICIO
		AND   I.SUBSERVICIO = D.SUBSERVICIO
  		AND   I.ESTADO != D.ESTADO
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO WHEN 'AAAAA' THEN 'A' ELSE 'I' END
	END
END;

DROP TRIGGER TU_WSQM_SUSCRIPCION_ESTADO;

DROP TRIGGER ERPADMIN.TU_WSQM_SUSCRIPCION_ESTADO;

CREATE TRIGGER ERPADMIN.TU_WSQM_SUSCRIPCION_ESTADO ON ERPADMIN.SUSCRIPCION
FOR UPDATE 
AS
BEGIN
	-- si se actualiza el estado y cambia el valor del mismo
	-- es probable que haya que actualizar estado_global de suscripcion para los sitios correspondientes
  IF UPDATE(ESTADO) 
		AND 0 < (		SELECT COUNT('X') 
								FROM INSERTED I, DELETED D
								WHERE I.PUBLICADOR = D.PUBLICADOR
								AND   I.SUSCRIPTOR = D.SUSCRIPTOR
								AND   I.SERVICIO = D.SERVICIO
								AND   I.SUBSERVICIO = D.SUBSERVICIO
						    AND 	I.ESTADO != D.ESTADO
						)
	BEGIN
		UPDATE SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I, DELETED D
		WHERE U.PUBLICADOR = I.PUBLICADOR
		AND   U.SUSCRIPTOR = I.SUSCRIPTOR
		AND   U.SERVICIO = I.SERVICIO
		AND   U.SUBSERVICIO = I.SUBSERVICIO
		AND   U.PUBLICADOR = S.SITIO 
		AND   U.SUSCRIPTOR = S2.SITIO
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = P.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   I.PUBLICADOR = D.PUBLICADOR
		AND   I.SUSCRIPTOR = D.SUSCRIPTOR
		AND   I.SERVICIO = D.SERVICIO
		AND   I.SUBSERVICIO = D.SUBSERVICIO
    AND 	I.ESTADO != D.ESTADO
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
	END
END;

DROP TRIGGER TU_WSQM_CONFIG_PAR_SITIO_ESTADO;

DROP TRIGGER ERPADMIN.TU_WSQM_CONFIG_PAR_SITIO_ESTADO;

CREATE TRIGGER ERPADMIN.TU_WSQM_CONFIG_PAR_SITIO_ESTADO ON ERPADMIN.CONFIG_PAR_SITIO
FOR UPDATE 
AS
BEGIN
	-- si se actualiza el estado y cambia el valor del mismo
	-- es probable que haya que actualizar estado_global de suscripcion para los sitios correspondientes
  IF UPDATE(ESTADO) 
		AND 0 < (		SELECT COUNT('X') 
								FROM INSERTED I, DELETED D
								WHERE I.PUBLICADOR = D.PUBLICADOR
								AND   I.SUSCRIPTOR = D.SUSCRIPTOR
						    AND 	I.ESTADO != D.ESTADO
						)
	BEGIN
		UPDATE SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I, DELETED D
		WHERE C.PUBLICADOR = I.PUBLICADOR
		AND   C.SUSCRIPTOR = I.SUSCRIPTOR
		AND   U.PUBLICADOR = S.SITIO 
		AND   U.SUSCRIPTOR = S2.SITIO
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   I.PUBLICADOR = D.PUBLICADOR
		AND   I.SUSCRIPTOR = D.SUSCRIPTOR
  		AND   I.ESTADO != D.ESTADO
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
	END
END;

DROP TRIGGER TI_WSQM_SUSCRIPCION_ESTADO;

DROP TRIGGER ERPADMIN.TI_WSQM_SUSCRIPCION_ESTADO;

CREATE TRIGGER ERPADMIN.TI_WSQM_SUSCRIPCION_ESTADO ON ERPADMIN.SUSCRIPCION
FOR INSERT 
AS
BEGIN
		UPDATE SUSCRIPCION
		SET ESTADO_GLOBAL = CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
		FROM ERPADMIN.SITIO S, ERPADMIN.SITIO S2, ERPADMIN.SUBSERVICIO E, ERPADMIN.PUBLICACION P, ERPADMIN.SUSCRIPCION U, ERPADMIN.CONFIG_PAR_SITIO C, INSERTED I
		WHERE U.PUBLICADOR = I.PUBLICADOR
		AND   U.SUSCRIPTOR = I.SUSCRIPTOR
		AND   U.SERVICIO = I.SERVICIO
		AND   U.SUBSERVICIO = I.SUBSERVICIO
		AND   U.PUBLICADOR = S.SITIO 
		AND   U.SUSCRIPTOR = S2.SITIO
		AND   U.SERVICIO = E.SERVICIO
		AND   U.SUBSERVICIO = E.SUBSERVICIO
		AND   U.PUBLICADOR = P.PUBLICADOR
		AND   U.SERVICIO = P.SERVICIO
		AND   U.SUBSERVICIO = P.SUBSERVICIO
		AND   U.PUBLICADOR = C.PUBLICADOR
		AND   U.SUSCRIPTOR = C.SUSCRIPTOR
		AND   P.PUBLICADOR = C.PUBLICADOR
		AND   U.ESTADO_GLOBAL != CASE S.ESTADO + S2.ESTADO + E.ESTADO + P.ESTADO + U.ESTADO + C.ESTADO WHEN 'AAAAAA' THEN 'A' ELSE 'I' END
END;

DROP FUNCTION WSQM_SUSCRIPTORES;

DROP FUNCTION ERPADMIN.WSQM_SUSCRIPTORES;

CREATE FUNCTION ERPADMIN.WSQM_SUSCRIPTORES (
	@PUBLICADOR VARCHAR(20),
	@SERVICIO  VARCHAR(30),
	@SUBSERVICIO  VARCHAR(20)
)
RETURNS VARCHAR(8000)
AS
BEGIN
	DECLARE @SUSCRIPTORES VARCHAR(4000)
	DECLARE @SUSCRIPTOR VARCHAR(20)

	DECLARE suscriptores_cursor CURSOR FOR 
		select sus.suscriptor
		from ERPADMIN.suscripcion sus, ERPADMIN.subservicio sub
		where sus.publicador = @publicador
		and sus.servicio = @servicio
		and sus.subservicio = @subservicio
		and sub.con_filtro = 'N'
		and sus.estado_global = 'A'
        	and sub.servicio = sus.servicio
        	and sub.subservicio = sus.subservicio
		order by suscriptor

	OPEN suscriptores_cursor
	FETCH NEXT FROM suscriptores_cursor INTO @SUSCRIPTOR

	SET @SUSCRIPTORES = ''

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SUSCRIPTORES = @SUSCRIPTORES + isnull(@SUSCRIPTOR,'nulo') + ','
		
		FETCH NEXT FROM suscriptores_cursor INTO @SUSCRIPTOR
	END

	IF LEN(@SUSCRIPTORES) > 0
    	BEGIN
		SELECT @SUSCRIPTORES = SUBSTRING(@SUSCRIPTORES,1,LEN(@SUSCRIPTORES)-1)
	END

	CLOSE suscriptores_cursor
    	deallocate suscriptores_cursor
 
	RETURN @SUSCRIPTORES
END;