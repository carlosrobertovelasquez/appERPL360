REMARK
\
SCRIPT DE MODIFICACION EXACTUS
=================================================================
MODULO:				POS
VERSION ANTERIOR:	6.5
VERSION QUE GENERA: 6.5
DBMS:				SQL SERVER
FECHA:				29/08/2011
ANALISTA:			Luis Diego Rodriguez Leiva
DESCRIPCION:		Script de Generacion de Tienda, Elimina tabla AUDIT_TRANS_INV, NCF_SECUENCIA, DES_BON_ESCALA_BONIFICACION, ELIMINACION_SINCRO_POS,DES_BON_ESPECIFICACION_GRUPO y 
					la crea sin la columna Identity

ATENCION !!!:
    Estas sentencias SQL deben de ejecutarse conectado como el
    el Usuario Administrador. Para el correcto funcionamiento del mismo!!!
    
    Se debe sustituir $$Compania$$ por el nombre de la compañía.
=================================================================
/
;
DROP TABLE AUDIT_TRANS_INV
;

CREATE TABLE AUDIT_TRANS_INV (
        AUDIT_TRANS_INV      int          NOT NULL,
        CONSECUTIVO          varchar(10)  NULL,
        USUARIO              varchar(25)  NOT NULL,
        FECHA_HORA           datetime     NOT NULL,
        MODULO_ORIGEN        varchar(4)   NOT NULL,
        APLICACION           varchar(249)  NOT NULL,
        REFERENCIA           varchar(200) NOT NULL,
        ASIENTO              varchar(10)  NULL,
        USUARIO_APRO         VARCHAR(25)  NULL,
        FECHA_HORA_APROB     DATETIME     NULL,
        PAQUETE_INVENTARIO   VARCHAR(4)   NULL
)
;

 ALTER TABLE AUDIT_TRANS_INV
        ADD CONSTRAINT AUDITRANSINVPK PRIMARY KEY NONCLUSTERED (
               AUDIT_TRANS_INV)
;

DROP TABLE NCF_SECUENCIA
;

CREATE TABLE NCF_SECUENCIA 
( 
	PREFIJO VARCHAR(50) NOT NULL,
	SECUENCIA INT NOT NULL,
	SECUENCIA_INICIAL VARCHAR(20) NOT NULL,
	SECUENCIA_FINAL VARCHAR(20) NOT NULL,
	FECHA_VENCE DATETIME NOT NULL,
	ULTIMO_VALOR VARCHAR(20) NULL
)
;

ALTER TABLE NCF_SECUENCIA 
	ADD CONSTRAINT NCFSECUENCIAPK PRIMARY KEY NONCLUSTERED ( 
	PREFIJO, SECUENCIA)
;

DROP TABLE DES_BON_ESCALA_BONIFICACION
;

CREATE TABLE DES_BON_ESCALA_BONIFICACION(
  ESCALA                  INT NOT NULL,
  REGLA                   VARCHAR(20)       NOT NULL,
  ARTICULO                VARCHAR(20)       NULL,
  CANTIDAD_MINIMA         DECIMAL(28,8)     NOT NULL,
  CANTIDAD_MAXIMA         DECIMAL(28,8)     NOT NULL,
  FACTOR                  DECIMAL(28,8)     NOT NULL,
  FACTOR_DET              DECIMAL(28,8)     NOT NULL DEFAULT 0,
  CANTIDAD_INICIAL        DECIMAL(28,8)     NOT NULL,
  CANTIDAD_INICIAL_DET    DECIMAL(28,8)     NOT NULL DEFAULT 0,
  CANTIDAD_INICIAL_CONSOL DECIMAL(28,8)     NOT NULL DEFAULT 0,
  CANTIDAD_PEDIDA         DECIMAL(28,8)     NOT NULL,
  UNIDAD_ALMACEN          DECIMAL(28,8)     NULL,
  UNIDAD_DETALLE          DECIMAL(28,8)     NULL,
  CANT_MINIMA_DET         DECIMAL(28,8)     NOT NULL DEFAULT 0,
  CANT_MAXIMA_DET         DECIMAL(28,8)     NOT NULL DEFAULT 0 
)
;

ALTER TABLE DES_BON_ESCALA_BONIFICACION 
  ADD CONSTRAINT PK_ESCALA_BONIFICACION PRIMARY KEY (ESCALA,REGLA)
;

DROP TABLE ELIMINACION_SINCRO_POS
;

 CREATE TABLE ELIMINACION_SINCRO_POS (
	 ID_SENTENCIA		 INT					NOT NULL,
	 TIPO_TIENDA		 VARCHAR(1)				NOT NULL DEFAULT('C'),	
	 FECHA_ELIMINACION	 DATETIME				NOT NULL,
     SENTENCIA			 VARCHAR(8000)			NOT NULL,
     NOMBRE_TABLA		 VARCHAR(254)			NOT NULL,
     ESTADO				 VARCHAR(1)				NOT NULL DEFAULT('P'),
     FECHA_APLICACION	 DATETIME				NULL,
     DETALLE_ERROR		 VARCHAR(8000)			NULL
)
;

ALTER TABLE ELIMINACION_SINCRO_POS
       ADD CONSTRAINT XPKELIMINASINCPOS PRIMARY KEY (ID_SENTENCIA, TIPO_TIENDA)
;

DROP TABLE DES_BON_ESPECIFICACION_GRUPO
;

CREATE TABLE DES_BON_ESPECIFICACION_GRUPO(
	ESCALA int	 NOT NULL,
	REGLA varchar(20) NOT NULL,
	ARTICULO varchar(20) NULL,
	CANTIDAD_MINIMA decimal(28, 8) NOT NULL,
	CANTIDAD_MAXIMA decimal(28, 8) NOT NULL
);

ALTER TABLE DES_BON_ESPECIFICACION_GRUPO ADD  CONSTRAINT PK_ESPECIFICACION_GRUPO PRIMARY KEY  
(
	ESCALA ASC,
	REGLA ASC
)
;

ALTER TABLE DES_BON_ESPECIFICACION_GRUPO  WITH CHECK ADD  CONSTRAINT FK_ESPECIFICACION_GRUPO_REGLA FOREIGN KEY(REGLA)
REFERENCES DES_BON_REGLA ( REGLA)
;

ALTER TABLE DES_BON_ESPECIFICACION_GRUPO CHECK CONSTRAINT FK_ESPECIFICACION_GRUPO_REGLA
;

CREATE FUNCTION ERPADMIN.SF_GETDATE
(
	/* Add the parameters for the function here*/
	
)
RETURNS DATETIME
AS
BEGIN
	DECLARE @start DATETIME
	DECLARE @diff INT
	DECLARE @end DATETIME
	SET @diff = 0
	DECLARE db_cursor CURSOR FOR  	
	SELECT DIFFMINUTES 
	FROM erpadmin.TIMEZONE 
	WHERE  ISDEFAULT = 'S'
	OPEN db_cursor   
	FETCH NEXT FROM db_cursor INTO @diff
	CLOSE db_cursor
	IF @diff != 0
	BEGIN
	SET @start = GETUTCDATE()
	SET @end = DATEADD(MINUTE,@diff, @start)
	RETURN @end
	END
	ELSE
	SET @end = GETDATE()
	RETURN @end
END;

INSERT INTO ACCION_VERSION ( ACCION, ULT_VERSION, USUARIO, FCH_HORA_VERSION ) 
SELECT 
	ACCION, '4.00.00', 'SA', ERPADMIN.SF_GETDATE()
FROM  ACCION
WHERE ESMODULO = 'S'
;

INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-12:00)',-720,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-11:00)',-660,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-10:00)',-600,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-09:00)',-540,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-08:00)',-480,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-07:00)',-420,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-06:00)',-360,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-05:00)',-300,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-04:30)',-270,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-04:00)',-240,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-03:30)',-210,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-03:00)',-180,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-02:00)',-120,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-01:00)',-60,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC-00:00)',0,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+01:00)',60,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+02:00)',120,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+03:00)',180,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+03:30)',210,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+04:00)',240,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+04:30)',270,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+05:00)',300,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+05:30)',330,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+05:45)',345,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+06:00)',360,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+06:30)',390,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+07:00)',420,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+08:00)',480,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+09:00)',540,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+09:30)',570,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+10:00)',600,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+11:00)',660,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+12:00)',720,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+13:00)',780,'N') ;
INSERT INTO erpadmin.TIMEZONE(NAME,DIFFMINUTES,ISDEFAULT) values('(UTC+14:00)',840,'N') ;
